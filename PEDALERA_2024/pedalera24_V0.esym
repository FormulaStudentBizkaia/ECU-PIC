d G "T3_CCP2" 2 270 "0x8"
D G "__PCH__" 2 276 ""5.091""
D G "__DEVICE__" 2 276 "2580"
D G "__DATE__" 2 276 ""24-Feb-25""
D G "__TIME__" 2 276 ""18:06:06""
D G "_UNICODE" 2 276 ""?""
D G "__EVAL" 2 276 ""?"" "Standard Header file for the PIC18F2580 device ////////////////"
c L "set_tris_a" 2 3 6 "FUNCTION"
f N "set_tris_a" 2 43 ""
v L "value" 2 43 "int8" `55 
f B "set_tris_a" 2 43 "void(int8 value)" `54 
f N "set_tris_b" 2 44 ""
v L "value" 2 44 "int8" `57 
f B "set_tris_b" 2 44 "void(int8 value)" `56 
f N "set_tris_c" 2 45 ""
v L "value" 2 45 "int8" `59 
f B "set_tris_c" 2 45 "void(int8 value)" `58 
f N "set_tris_e" 2 46 ""
v L "value" 2 46 "int8" `61 
f B "set_tris_e" 2 46 "void(int8 value)" `60 
f N "get_tris_a" 2 47 ""
f B "get_tris_a" 2 47 "int8()" `62 
f N "get_tris_b" 2 48 ""
f B "get_tris_b" 2 48 "int8()" `63 
f N "get_tris_c" 2 49 ""
f B "get_tris_c" 2 49 "int8()" `64 
f N "get_tris_e" 2 50 ""
f B "get_tris_e" 2 50 "int8()" `65 
f N "output_a" 2 51 ""
v L "value" 2 51 "int8" `67 
f B "output_a" 2 51 "void(int8 value)" `66 
f N "output_b" 2 52 ""
v L "value" 2 52 "int8" `69 
f B "output_b" 2 52 "void(int8 value)" `68 
f N "output_c" 2 53 ""
v L "value" 2 53 "int8" `71 
f B "output_c" 2 53 "void(int8 value)" `70 
f N "output_e" 2 54 ""
v L "value" 2 54 "int8" `73 
f B "output_e" 2 54 "void(int8 value)" `72 
f N "input_a" 2 55 ""
f B "input_a" 2 55 "int8()" `74 
f N "input_b" 2 56 ""
f B "input_b" 2 56 "int8()" `75 
f N "input_c" 2 57 ""
f B "input_c" 2 57 "int8()" `76 
f N "input_e" 2 58 ""
f B "input_e" 2 58 "int8()" `77 
f N "input_change_a" 2 59 ""
f B "input_change_a" 2 59 "int8()" `78 
f N "input_change_b" 2 60 ""
f B "input_change_b" 2 60 "int8()" `79 
f N "input_change_c" 2 61 ""
f B "input_change_c" 2 61 "int8()" `80 
f N "input_change_e" 2 62 ""
f B "input_change_e" 2 62 "int8()" `81 
f N "port_b_pullups" 2 63 ""
v L "value" 2 63 "int8" `83 
f B "port_b_pullups" 2 63 "void(int8 value)" `82 
f N "input" 2 64 ""
v L "pin" 2 64 "int16" `85 
f B "input" 2 64 "int8(int16 pin)" `84 
f N "input_state" 2 65 ""
v L "pin" 2 65 "int16" `87 
f B "input_state" 2 65 "int8(int16 pin)" `86 
f N "output_low" 2 66 ""
v L "pin" 2 66 "int16" `89 
f B "output_low" 2 66 "void(int16 pin)" `88 
f N "output_high" 2 67 ""
v L "pin" 2 67 "int16" `91 
f B "output_high" 2 67 "void(int16 pin)" `90 
f N "output_toggle" 2 68 ""
v L "pin" 2 68 "int16" `93 
f B "output_toggle" 2 68 "void(int16 pin)" `92 
f N "output_bit" 2 69 ""
v L "pin" 2 69 "int16" `95 
v L "level" 2 69 "int8" `96 
f B "output_bit" 2 69 "void(int16 pin,int8 level)" `94 
f N "output_float" 2 70 ""
v L "pin" 2 70 "int16" `98 
f B "output_float" 2 70 "void(int16 pin)" `97 
f N "output_drive" 2 71 ""
v L "pin" 2 71 "int16" `100 
f B "output_drive" 2 71 "void(int16 pin)" `99  "Constants used to identify pins in the above are:"
d G "PIN_A0" 2 75 "31744"
d G "PIN_A1" 2 76 "31745"
d G "PIN_A2" 2 77 "31746"
d G "PIN_A3" 2 78 "31747"
d G "PIN_A4" 2 79 "31748"
d G "PIN_A5" 2 80 "31749"
d G "PIN_A6" 2 81 "31750"
d G "PIN_A7" 2 82 "31751"
d G "PIN_B0" 2 84 "31752"
d G "PIN_B1" 2 85 "31753"
d G "PIN_B2" 2 86 "31754"
d G "PIN_B3" 2 87 "31755"
d G "PIN_B4" 2 88 "31756"
d G "PIN_B5" 2 89 "31757"
d G "PIN_B6" 2 90 "31758"
d G "PIN_B7" 2 91 "31759"
d G "PIN_C0" 2 93 "31760"
d G "PIN_C1" 2 94 "31761"
d G "PIN_C2" 2 95 "31762"
d G "PIN_C3" 2 96 "31763"
d G "PIN_C4" 2 97 "31764"
d G "PIN_C5" 2 98 "31765"
d G "PIN_C6" 2 99 "31766"
d G "PIN_C7" 2 100 "31767"
d G "PIN_E3" 2 102 "31779"
d G "FALSE" 2 105 "0"
d G "TRUE" 2 106 "1"
d G "BYTE" 2 108 "int8"
d G "BOOLEAN" 2 109 "int1"
d G "getc" 2 111 "getch"
d G "fgetc" 2 112 "getch"
d G "getchar" 2 113 "getch"
d G "putc" 2 114 "putchar"
d G "fputc" 2 115 "putchar"
d G "fgets" 2 116 "gets"
d G "fputs" 2 117 "puts"
c L "output_drive" 2 3 3 "FUNCTION"
f N "restart_cause" 2 122 ""
f B "restart_cause" 2 122 "int8()" `101 
f N "reset_cpu" 2 123 ""
f B "reset_cpu" 2 123 "void()" `102 
f N "sleep" 2 124 ""
f B "sleep" 2 124 "void()" `103 
f N "sleep" 2 125 ""
v L "type" 2 125 "int8" `105 
f B "sleep" 2 125 "void(int8 type)" `104  "Constants returned from RESTART_CAUSE() are:"
d G "WDT_TIMEOUT" 2 127 "7"
d G "MCLR_FROM_SLEEP" 2 128 "11"
d G "MCLR_FROM_RUN" 2 129 "15"
d G "NORMAL_POWER_UP" 2 130 "12"
d G "BROWNOUT_RESTART" 2 131 "14"
d G "WDT_FROM_SLEEP" 2 132 "3"
d G "RESET_INSTRUCTION" 2 133 "0"
d G "SLEEP_FULL" 2 136 "0" "Default"
d G "SLEEP_IDLE" 2 137 "1" "Clock and peripherals don't stop"
c L "sleep" 2 3 5 "FUNCTION"
f N "setup_timer_0" 2 144 ""
v L "mode" 2 144 "int8" `107 
f B "setup_timer_0" 2 144 "void(int8 mode)" `106 
f N "set_timer0" 2 145 ""
v L "value" 2 145 "int16" `109 
f B "set_timer0" 2 145 "void(int16 value)" `108 
f N "get_timer0" 2 146 ""
f B "get_timer0" 2 146 "int16()" `110 
f N "setup_counters" 2 147 ""
v L "mode" 2 147 "int8" `112 
v L "prescaler" 2 147 "int8" `113 
f B "setup_counters" 2 147 "void(int8 mode,int8 prescaler)" `111 
f N "set_rtcc" 2 148 ""
v L "value" 2 148 "int16" `115 
f B "set_rtcc" 2 148 "void(int16 value)" `114 
f N "get_rtcc" 2 149 ""
f B "get_rtcc" 2 149 "int16()" `116  "Constants used for SETUP_TIMER_0() are:"
d G "T0_INTERNAL" 2 151 "0"
d G "T0_EXT_L_TO_H" 2 152 "32"
d G "T0_EXT_H_TO_L" 2 153 "48"
d G "T0_DIV_1" 2 155 "8"
d G "T0_DIV_2" 2 156 "0"
d G "T0_DIV_4" 2 157 "1"
d G "T0_DIV_8" 2 158 "2"
d G "T0_DIV_16" 2 159 "3"
d G "T0_DIV_32" 2 160 "4"
d G "T0_DIV_64" 2 161 "5"
d G "T0_DIV_128" 2 162 "6"
d G "T0_DIV_256" 2 163 "7"
d G "T0_OFF" 2 165 "0x80"
d G "T0_8_BIT" 2 167 "0x40"
d G "RTCC_INTERNAL" 2 171 "0"
d G "RTCC_EXT_L_TO_H" 2 172 "32"
d G "RTCC_EXT_H_TO_L" 2 173 "48"
d G "RTCC_DIV_1" 2 174 "8"
d G "RTCC_DIV_2" 2 175 "0"
d G "RTCC_DIV_4" 2 176 "1"
d G "RTCC_DIV_8" 2 177 "2"
d G "RTCC_DIV_16" 2 178 "3"
d G "RTCC_DIV_32" 2 179 "4"
d G "RTCC_DIV_64" 2 180 "5"
d G "RTCC_DIV_128" 2 181 "6"
d G "RTCC_DIV_256" 2 182 "7"
d G "RTCC_OFF" 2 183 "0x80"
d G "RTCC_8_BIT" 2 184 "0x40"
c L "get_rtcc" 2 3 8 "FUNCTION"
f N "setup_wdt" 2 195 ""
v L "mode" 2 195 "int16" `118 
f B "setup_wdt" 2 195 "void(int16 mode)" `117 
f N "restart_wdt" 2 196 ""
f B "restart_wdt" 2 196 "void()" `119  "Constants used for SETUP_WDT() are:"
d G "WDT_ON" 2 198 "0x100"
d G "WDT_OFF" 2 199 "0"
d G "WDT_4MS" 2 201 "0x300"
d G "WDT_8MS" 2 202 "0x500"
d G "WDT_16MS" 2 203 "0x700"
d G "WDT_32MS" 2 204 "0x900"
d G "WDT_64MS" 2 205 "0xB00"
d G "WDT_128MS" 2 206 "0xD00"
d G "WDT_256MS" 2 207 "0xF00"
d G "WDT_512MS" 2 208 "0x1100"
d G "WDT_1S" 2 209 "0x1300"
d G "WDT_2S" 2 210 "0x1500"
d G "WDT_4S" 2 211 "0x1700"
d G "WDT_8S" 2 212 "0x1900"
d G "WDT_16S" 2 213 "0x1B00"
d G "WDT_32S" 2 214 "0x1D00"
d G "WDT_64S" 2 215 "0x1F00"
d G "WDT_128S" 2 216 "0x2100"
c L "restart_wdt" 2 3 3 "FUNCTION"
f N "setup_timer_1" 2 221 ""
v L "mode" 2 221 "int16" `121 
f B "setup_timer_1" 2 221 "void(int16 mode)" `120 
f N "get_timer1" 2 222 ""
f B "get_timer1" 2 222 "int16()" `122 
f N "set_timer1" 2 223 ""
v L "value" 2 223 "int16" `124 
f B "set_timer1" 2 223 "void(int16 value)" `123  "Constants used for SETUP_TIMER_1() are:"
d G "T1_DISABLED" 2 226 "0"
d G "T1_INTERNAL" 2 227 "0x85"
d G "T1_EXTERNAL" 2 228 "0x87"
d G "T1_EXTERNAL_SYNC" 2 229 "0x83"
d G "T1_CLK_OUT" 2 231 "8"
d G "T1_DIV_BY_1" 2 233 "0"
d G "T1_DIV_BY_2" 2 234 "0x10"
d G "T1_DIV_BY_4" 2 235 "0x20"
d G "T1_DIV_BY_8" 2 236 "0x30"
c L "set_timer1" 2 3 3 "FUNCTION"
f N "setup_timer_2" 2 241 ""
v L "mode" 2 241 "int8" `126 
v L "period" 2 241 "int8" `127 
v L "postscale" 2 241 "int8" `128 
f B "setup_timer_2" 2 241 "void(int8 mode,int8 period,int8 postscale)" `125 
f N "get_timer2" 2 242 ""
f B "get_timer2" 2 242 "int8()" `129 
f N "set_timer2" 2 243 ""
v L "value" 2 243 "int8" `131 
f B "set_timer2" 2 243 "void(int8 value)" `130  "Constants used for SETUP_TIMER_2() are:"
d G "T2_DISABLED" 2 245 "0"
d G "T2_DIV_BY_1" 2 246 "4"
d G "T2_DIV_BY_4" 2 247 "5"
d G "T2_DIV_BY_16" 2 248 "6"
c L "set_timer2" 2 3 3 "FUNCTION"
f N "setup_timer_3" 2 253 ""
v L "mode" 2 253 "int16" `133 
f B "setup_timer_3" 2 253 "void(int16 mode)" `132 
f N "get_timer3" 2 254 ""
f B "get_timer3" 2 254 "int16()" `134 
f N "set_timer3" 2 255 ""
v L "value" 2 255 "int16" `136 
f B "set_timer3" 2 255 "void(int16 value)" `135  "Constants used for SETUP_TIMER_3() are:"
d G "T3_DISABLED" 2 258 "0"
d G "T3_INTERNAL" 2 259 "0x85"
d G "T3_EXTERNAL" 2 260 "0x87"
d G "T3_EXTERNAL_SYNC" 2 261 "0x83"
d G "T3_DIV_BY_1" 2 263 "0"
d G "T3_DIV_BY_2" 2 264 "0x10"
d G "T3_DIV_BY_4" 2 265 "0x20"
d G "T3_DIV_BY_8" 2 266 "0x30"
d G "T3_CCP1_TO_2" 2 269 "0x48"
d G "T3_CCP2" 2 270 "0x8"
c L "set_timer3" 2 3 4 "FUNCTION"
f N "setup_ccp1" 2 276 ""
v L "mode" 2 276 "int32" `138 
f B "setup_ccp1" 2 276 "void(int32 mode)" `137 
f N "setup_ccp1" 2 277 ""
v L "mode" 2 277 "int32" `140 
v L "pwm" 2 277 "int8" `141 
f B "setup_ccp1" 2 277 "void(int32 mode,int8 pwm)" `139 
f N "set_pwm1_duty" 2 278 ""
v L "value" 2 278 "int8" `143 
f B "set_pwm1_duty" 2 278 "void(int8 value)" `142 
f N "set_pwm1_duty" 2 279 ""
v L "value" 2 279 "int16" `145 
f B "set_pwm1_duty" 2 279 "void(int16 value)" `144  "Constants used for SETUP_CCPx() are:"
d G "CCP_OFF" 2 281 "0"
d G "CCP_CAPTURE_FE" 2 282 "0x04"
d G "CCP_CAPTURE_RE" 2 283 "0x05"
d G "CCP_CAPTURE_DIV_4" 2 284 "0x06"
d G "CCP_CAPTURE_DIV_16" 2 285 "0x07"
d G "CCP_COMPARE_SET_ON_MATCH" 2 286 "0x08"
d G "CCP_COMPARE_CLR_ON_MATCH" 2 287 "0x09"
d G "CCP_COMPARE_INT" 2 288 "0x0A"
d G "CCP_COMPARE_INT_AND_TOGGLE" 2 289 "0x02"
d G "CCP_COMPARE_RESET_TIMER" 2 290 "0x0B"
d G "CCP_PWM" 2 291 "0x0C"
d G "CCP_PWM_PLUS_1" 2 292 "0x1c"
d G "CCP_PWM_PLUS_2" 2 293 "0x2c"
d G "CCP_PWM_PLUS_3" 2 294 "0x3c"
c L "set_pwm1_duty" 2 3 1 "FUNCTION"
c L "set_pwm1_duty" 2 3 3 "FUNCTION"
f N "setup_spi" 2 304 ""
v L "mode" 2 304 "int32" `150 
f B "setup_spi" 2 304 "void(int32 mode)" `149 
f N "spi_write" 2 305 ""
v L "value" 2 305 "int8" `152 
f B "spi_write" 2 305 "void(int8 value)" `151 
f N "spi_write" 2 306 ""
v L "wait" 2 306 "int8" `154 
v L "value" 2 306 "int8" `155 
f B "spi_write" 2 306 "void(int8 wait,int8 value)" `153 
f N "spi_read" 2 307 ""
f B "spi_read" 2 307 "int8()" `156 
f N "spi_read" 2 308 ""
v L "value" 2 308 "int8" `158 
f B "spi_read" 2 308 "int8(int8 value)" `157 
f N "spi_data_is_in" 2 309 ""
f B "spi_data_is_in" 2 309 "int8()" `159 
f N "setup_spi2" 2 310 ""
v L "mode" 2 310 "int32" `161 
f B "setup_spi2" 2 310 "void(int32 mode)" `160 
f N "spi_write2" 2 311 ""
v L "value" 2 311 "int8" `163 
f B "spi_write2" 2 311 "void(int8 value)" `162 
f N "spi_read2" 2 312 ""
f B "spi_read2" 2 312 "int8()" `164 
f N "spi_read2" 2 313 ""
v L "value" 2 313 "int8" `166 
f B "spi_read2" 2 313 "int8(int8 value)" `165 
f N "spi_data_is_in2" 2 314 ""
f B "spi_data_is_in2" 2 314 "int8()" `167  "Constants used in SETUP_SPI() are:"
d G "SPI_DISABLED" 2 316 "0x00"
d G "SPI_MASTER" 2 317 "0x20"
d G "SPI_SLAVE" 2 318 "0x24"
d G "SPI_SCK_IDLE_HIGH" 2 319 "0x10"
d G "SPI_SCK_IDLE_LOW" 2 320 "0x00"
d G "SPI_CLK_DIV_4" 2 321 "0x00"
d G "SPI_CLK_DIV_16" 2 322 "0x01"
d G "SPI_CLK_DIV_64" 2 323 "0x02"
d G "SPI_CLK_T2" 2 324 "0x03"
d G "SPI_SS_DISABLED" 2 325 "0x01"
d G "SPI_XMIT_L_TO_H" 2 327 "0x4000"
d G "SPI_XMIT_H_TO_L" 2 328 "0x0000"
d G "SPI_SAMPLE_AT_MIDDLE" 2 330 "0x0000"
d G "SPI_SAMPLE_AT_END" 2 331 "0x8000"
d G "SPI_L_TO_H" 2 334 "SPI_SCK_IDLE_LOW"
d G "SPI_H_TO_L" 2 335 "SPI_SCK_IDLE_HIGH"
c L "spi_data_is_in2" 2 3 2 "FUNCTION"
f N "setup_uart" 2 339 ""
v L "baud" 2 339 "int32" `169 
f B "setup_uart" 2 339 "void(int32 baud)" `168 
f N "setup_uart" 2 340 ""
v L "baud" 2 340 "int32" `171 
v L "stream" 2 340 "int8" `172 
f B "setup_uart" 2 340 "void(int32 baud,int8 stream)" `170 
f N "setup_uart" 2 341 ""
v L "baud" 2 341 "int32" `174 
v L "stream" 2 341 "int8" `175 
v L "clock" 2 341 "int32" `176 
f B "setup_uart" 2 341 "void(int32 baud,int8 stream,int32 clock)" `173 
f N "set_uart_speed" 2 342 ""
v L "baud" 2 342 "int32" `178 
f B "set_uart_speed" 2 342 "void(int32 baud)" `177 
f N "set_uart_speed" 2 343 ""
v L "baud" 2 343 "int32" `180 
v L "stream" 2 343 "int8" `181 
f B "set_uart_speed" 2 343 "void(int32 baud,int8 stream)" `179 
f N "set_uart_speed" 2 344 ""
v L "baud" 2 344 "int32" `183 
v L "stream" 2 344 "int8" `184 
v L "clock" 2 344 "int32" `185 
f B "set_uart_speed" 2 344 "void(int32 baud,int8 stream,int32 clock)" `182  "Constants used in setup_uart() are:"
d G "UART_ADDRESS" 2 348 "2"
d G "UART_DATA" 2 349 "4"
d G "UART_AUTODETECT" 2 350 "8"
d G "UART_AUTODETECT_NOWAIT" 2 351 "9"
d G "UART_WAKEUP_ON_RDA" 2 352 "10"
d G "UART_SEND_BREAK" 2 353 "13"
c L "set_uart_speed" 2 3 2 "FUNCTION"
f N "setup_vref" 2 357 ""
v L "mode" 2 357 "int8" `187 
f B "setup_vref" 2 357 "void(int8 mode)" `186  "Constants used in setup_vref() are:"
d G "VREF_LOW" 2 359 "0xa0"
d G "VREF_HIGH" 2 360 "0x80"
d G "VREF_F5" 2 362 "0x40"
d G "VREF_COMP" 2 363 "0x10"
c L "setup_vref" 2 3 2 "FUNCTION"
f N "setup_low_volt_detect" 2 367 ""
v L "mode" 2 367 "int8" `189 
f B "setup_low_volt_detect" 2 367 "void(int8 mode)" `188  "Constants used in setup_low_volt_detect() are:"
d G "LVD_LVDIN" 2 369 "0x1F"
d G "LVD_45" 2 370 "0x1E"
d G "LVD_42" 2 371 "0x1D"
d G "LVD_40" 2 372 "0x1C"
d G "LVD_38" 2 373 "0x1B"
d G "LVD_36" 2 374 "0x1A"
d G "LVD_35" 2 375 "0x19"
d G "LVD_33" 2 376 "0x18"
d G "LVD_30" 2 377 "0x17"
d G "LVD_28" 2 378 "0x16"
d G "LVD_27" 2 379 "0x15"
d G "LVD_25" 2 380 "0x14"
d G "LVD_24" 2 381 "0x13"
d G "LVD_23" 2 382 "0x12"
d G "LVD_22" 2 383 "0x11"
d G "LVD_21" 2 384 "0x10"
d G "LVD_TRIGGER_BELOW" 2 386 "0"
d G "LVD_TRIGGER_ABOVE" 2 387 "0x80"
c L "setup_low_volt_detect" 2 3 2 "FUNCTION"
f N "setup_oscillator" 2 392 ""
v L "mode" 2 392 "int8" `191 
f B "setup_oscillator" 2 392 "int8(int8 mode)" `190 
f N "setup_oscillator" 2 393 ""
v L "mode" 2 393 "int8" `193 
v L "tune" 2 393 "sint8" `194 
f B "setup_oscillator" 2 393 "int8(int8 mode,sint8 tune)" `192  "Constants used in setup_oscillator() are:"
d G "OSC_31KHZ" 2 396 "0"
d G "OSC_125KHZ" 2 397 "0x10"
d G "OSC_250KHZ" 2 398 "0x20"
d G "OSC_500KHZ" 2 399 "0x30"
d G "OSC_1MHZ" 2 400 "0x40"
d G "OSC_2MHZ" 2 401 "0x50"
d G "OSC_4MHZ" 2 402 "0x60"
d G "OSC_8MHZ" 2 403 "0x70"
d G "OSC_16MHZ" 2 404 "0x4060"
d G "OSC_32MHZ" 2 405 "0x4070"
d G "OSC_TIMER1" 2 407 "1"
d G "OSC_INTRC" 2 408 "2"
d G "OSC_NORMAL" 2 409 "0"
d G "OSC_IDLE_MODE" 2 411 "0x80"
d G "OSC_31250" 2 412 "0x8000"
d G "OSC_PLL_ON" 2 413 "0x4000"
d G "OSC_PLL_OFF" 2 414 "0"
d G "OSC_STATE_STABLE" 2 418 "4"
d G "OSC_STATE_EXT_RUNNING" 2 419 "8"
c L "setup_oscillator" 2 3 4 "FUNCTION"
f N "setup_adc" 2 426 ""
v L "mode" 2 426 "int16" `196 
f B "setup_adc" 2 426 "void(int16 mode)" `195 
f N "read_adc" 2 427 ""
f B "read_adc" 2 427 "int8()" `197 
f N "read_adc" 2 428 ""
v L "mode" 2 428 "int8" `199 
f B "read_adc" 2 428 "int8(int8 mode)" `198 
f N "read_adc" 2 429 ""
f G "read_adc" 2 429 "int16()" `200 
f N "read_adc" 2 430 ""
v L "mode" 2 430 "int8" `201 
f G "read_adc" 2 430 "int16(int8 mode,int8 pins)" `200 
f N "adc_done" 2 431 ""
f B "adc_done" 2 431 "int8(int8 mode,int8 pins)" `200  "Constants used for SETUP_ADC() are:"
d G "ADC_OFF" 2 433 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 2 434 "0x100"
d G "ADC_CLOCK_DIV_4" 2 435 "0x04"
d G "ADC_CLOCK_DIV_8" 2 436 "0x01"
d G "ADC_CLOCK_DIV_16" 2 437 "0x05"
d G "ADC_CLOCK_DIV_32" 2 438 "0x02"
d G "ADC_CLOCK_DIV_64" 2 439 "0x06"
d G "ADC_CLOCK_INTERNAL" 2 440 "0x07" "Internal 2-6us"
d G "ADC_TAD_MUL_0" 2 442 "0x00"
d G "ADC_TAD_MUL_2" 2 443 "0x08"
d G "ADC_TAD_MUL_4" 2 444 "0x10"
d G "ADC_TAD_MUL_6" 2 445 "0x18"
d G "ADC_TAD_MUL_8" 2 446 "0x20"
d G "ADC_TAD_MUL_12" 2 447 "0x28"
d G "ADC_TAD_MUL_16" 2 448 "0x30"
d G "ADC_TAD_MUL_20" 2 449 "0x38"
c L "adc_done" 2 3 1 "FUNCTION"
f N "setup_adc_ports" 2 452 ""
v L "pins" 2 452 "int8" `202 
f B "setup_adc_ports" 2 452 "void(int8 pins)" `201 
f N "setup_adc_ports" 2 453 ""
v L "pins" 2 453 "int8" `204 
v L "reference" 2 453 "int8" `205 
f B "setup_adc_ports" 2 453 "void(int8 pins,int8 reference)" `203 
f N "set_analog_pins" 2 454 ""
v L "pins" 2 454 "int8" `207 
f B "set_analog_pins" 2 454 "void(int8 pins)" `206 
f N "set_analog_pins" 2 455 ""
v L "pins" 2 455 "int8" `209 
v L "reference" 2 455 "int8" `210 
f B "set_analog_pins" 2 455 "void(int8 pins,int8 reference)" `208 
f N "set_adc_channel" 2 456 ""
v L "channel" 2 456 "int8" `212 
f B "set_adc_channel" 2 456 "void(int8 channel)" `211  "Constants used in SETUP_ADC_PORTS() and SET_ANALOG_PINS() are:"
d G "NO_ANALOGS" 2 459 "0x0F" "None"
d G "ALL_ANALOG" 2 460 "0x00" "A0 A1 A2 A3 A5 E0 E1 E2 B1 B4 B0"
d G "AN0_TO_AN9" 2 461 "0x05" "A0 A1 A2 A3 A5 E0 E1 E2 B1 B4"
d G "AN0_TO_AN8" 2 462 "0x06" "A0 A1 A2 A3 A5 E0 E1 E2 B1"
d G "AN0_TO_AN7" 2 463 "0x07" "A0 A1 A2 A3 A5 E0 E1 E2"
d G "AN0_TO_AN6" 2 464 "0x08" "A0 A1 A2 A3 A5 E0 E1"
d G "AN0_TO_AN5" 2 465 "0x09" "A0 A1 A2 A3 A5 E0"
d G "AN0_TO_AN4" 2 466 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 2 467 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 2 468 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 2 469 "0x0D" "A0 A1"
d G "AN0" 2 470 "0x0E" "A0"
d G "AN0_TO_AN12_ANALOG" 2 471 "0x02" "!old only provided for compatibility"
d G "AN0_TO_AN11_ANALOG" 2 472 "0x03" "!old only provided for compatibility"
d G "AN0_TO_AN10_ANALOG" 2 473 "0x04" "!old only provided for compatibility"
d G "AN0_TO_AN9_ANALOG" 2 474 "0x05" "!old only provided for compatibility"
d G "AN0_TO_AN8_ANALOG" 2 475 "0x06" "!old only provided for compatibility"
d G "AN0_TO_AN4_ANALOG" 2 476 "0x0A" "!old only provided for compatibility"
d G "AN0_TO_AN3_ANALOG" 2 477 "0x0B" "!old only provided for compatibility"
d G "AN0_TO_AN2_ANALOG" 2 478 "0x0C" "!old only provided for compatibility"
d G "AN0_TO_AN1_ANALOG" 2 479 "0x0D" "!old only provided for compatibility"
d G "AN0_ANALOG" 2 480 "0x0E" "!old only provided for compatibility"
d G "VSS_VDD" 2 483 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 2 484 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 2 485 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 2 486 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 2 489 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 2 490 "1"
d G "ADC_READ_ONLY" 2 491 "6"
c L "set_adc_channel" 2 3 3 "FUNCTION"
f N "abs" 2 497 ""
v L "x" 2 497 "sint8" `214 
f B "abs" 2 497 "sint8(sint8 x)" `213 
f N "abs" 2 498 ""
v L "x" 2 498 "sint16" `216 
f B "abs" 2 498 "sint16(sint16 x)" `215 
f N "abs" 2 499 ""
v L "x" 2 499 "sint32" `218 
f B "abs" 2 499 "sint32(sint32 x)" `217 
f N "abs" 2 500 ""
v L "x" 2 500 "float" `220 
f B "abs" 2 500 "float(float x)" `219 
f N "_mul" 2 501 ""
v L "??65535" 2 501 "int8" `222 
v L "??65535" 2 501 "int8" `223 
f B "_mul" 2 501 "int16(int8 ,int8 )" `221 
f N "_mul" 2 502 ""
v L "??65535" 2 502 "sint8" `225 
v L "??65535" 2 502 "sint8" `226 
f B "_mul" 2 502 "sint16(sint8 ,sint8 )" `224 
f N "_mul" 2 503 ""
v L "??65535" 2 503 "int16" `228 
v L "??65535" 2 503 "int16" `229 
f B "_mul" 2 503 "int32(int16 ,int16 )" `227 
f N "_mul" 2 504 ""
v L "??65535" 2 504 "sint16" `231 
v L "??65535" 2 504 "sint16" `232 
f B "_mul" 2 504 "sint32(sint16 ,sint16 )" `230  "Memory Manipulation Prototypes:"
f N "read_bank" 2 507 ""
v L "bank" 2 507 "int8" `234 
v L "offset" 2 507 "int8" `235 
f B "read_bank" 2 507 "int8(int8 bank,int8 offset)" `233 
f N "write_bank" 2 508 ""
v L "bank" 2 508 "int8" `237 
v L "offset" 2 508 "int8" `238 
v L "value" 2 508 "int8" `239 
f B "write_bank" 2 508 "void(int8 bank,int8 offset,int8 value)" `236 
f N "strcpy" 2 509 ""
v L "dest" 2 509 "*int8" `241 
v L "src" 2 509 "*int8" `242 
f B "strcpy" 2 509 "void(*int8 dest,*int8 src)" `240 
f N "memset" 2 510 ""
v L "destination" 2 510 "*int8" `244 
v L "value" 2 510 "int8" `245 
v L "num" 2 510 "int16" `246 
f B "memset" 2 510 "void(*int8 destination,int8 value,int16 num)" `243 
f N "memcpy" 2 511 ""
v L "destination" 2 511 "*int8" `248 
v L "source" 2 511 "*int8" `249 
v L "num" 2 511 "int16" `250 
f B "memcpy" 2 511 "void(*int8 destination,*int8 source,int16 num)" `247  "String Prototypes:"
f N "toupper" 2 514 ""
v L "cvalue" 2 514 "int8" `252 
f B "toupper" 2 514 "int8(int8 cvalue)" `251 
f N "tolower" 2 515 ""
v L "cvalue" 2 515 "int8" `254 
f B "tolower" 2 515 "int8(int8 cvalue)" `253 
f N "sprintf" 2 516 ""
v L "string" 2 516 "*int8" `256 
v L "cstring" 2 516 "*int8" `257 
f B "sprintf" 2 516 "void(*int8 string,*int8 cstring,*int8 _VA_LIST)" `255  "Data Manipulators Prototypes:"
f N "shift_left" 2 519 ""
v L "address" 2 519 "*int8" `260 
v L "bytes" 2 519 "int8" `261 
v L "value" 2 519 "int8" `262 
f B "shift_left" 2 519 "int8(*int8 address,int8 bytes,int8 value)" `259 
f N "shift_right" 2 520 ""
v L "address" 2 520 "*int8" `264 
v L "bytes" 2 520 "int8" `265 
v L "value" 2 520 "int8" `266 
f B "shift_right" 2 520 "int8(*int8 address,int8 bytes,int8 value)" `263 
f N "rotate_left" 2 521 ""
v L "address" 2 521 "*int8" `268 
v L "bytes" 2 521 "int8" `269 
f B "rotate_left" 2 521 "void(*int8 address,int8 bytes)" `267 
f N "rotate_right" 2 522 ""
v L "address" 2 522 "*int8" `271 
v L "bytes" 2 522 "int8" `272 
f B "rotate_right" 2 522 "void(*int8 address,int8 bytes)" `270 
f N "swap" 2 523 ""
v L "value" 2 523 "int8" `274 
f B "swap" 2 523 "void(int8 value)" `273 
f N "make8" 2 524 ""
v L "var" 2 524 "int16" `276 
v L "offset" 2 524 "int8" `277 
f B "make8" 2 524 "int8(int16 var,int8 offset)" `275 
f N "make8" 2 525 ""
v L "var" 2 525 "int32" `279 
v L "offset" 2 525 "int8" `280 
f B "make8" 2 525 "int8(int32 var,int8 offset)" `278 
f N "make16" 2 526 ""
v L "varhigh" 2 526 "int8" `282 
v L "varlow" 2 526 "int8" `283 
f B "make16" 2 526 "int16(int8 varhigh,int8 varlow)" `281 
f N "make32" 2 527 ""
v L "var1" 2 527 "int16" `285 
f B "make32" 2 527 "int32(int16 var1)" `284 
f N "make32" 2 528 ""
v L "var1" 2 528 "int16" `287 
v L "var2" 2 528 "int16" `288 
f B "make32" 2 528 "int32(int16 var1,int16 var2)" `286 
f N "make32" 2 529 ""
v L "var1" 2 529 "int16" `290 
v L "var2" 2 529 "int8" `291 
f B "make32" 2 529 "int32(int16 var1,int8 var2)" `289 
f N "make32" 2 530 ""
v L "var1" 2 530 "int16" `293 
v L "var2" 2 530 "int8" `294 
v L "var3" 2 530 "int8" `295 
f B "make32" 2 530 "int32(int16 var1,int8 var2,int8 var3)" `292 
f N "make32" 2 531 ""
v L "var1" 2 531 "int8" `297 
f B "make32" 2 531 "int32(int8 var1)" `296 
f N "make32" 2 532 ""
v L "var1" 2 532 "int8" `299 
v L "var2" 2 532 "int8" `300 
f B "make32" 2 532 "int32(int8 var1,int8 var2)" `298 
f N "make32" 2 533 ""
v L "var1" 2 533 "int8" `302 
v L "var2" 2 533 "int8" `303 
v L "var3" 2 533 "int8" `304 
f B "make32" 2 533 "int32(int8 var1,int8 var2,int8 var3)" `301 
f N "make32" 2 534 ""
v L "var1" 2 534 "int8" `306 
v L "var2" 2 534 "int8" `307 
v L "var3" 2 534 "int8" `308 
v L "var4" 2 534 "int8" `309 
f B "make32" 2 534 "int32(int8 var1,int8 var2,int8 var3,int8 var4)" `305 
f N "make32" 2 535 ""
v L "var1" 2 535 "int8" `311 
v L "var2" 2 535 "int16" `312 
f B "make32" 2 535 "int32(int8 var1,int16 var2)" `310 
f N "make32" 2 536 ""
v L "var1" 2 536 "int8" `314 
v L "var2" 2 536 "int16" `315 
v L "var3" 2 536 "int8" `316 
f B "make32" 2 536 "int32(int8 var1,int16 var2,int8 var3)" `313 
f N "make32" 2 537 ""
v L "var1" 2 537 "int8" `318 
v L "var2" 2 537 "int8" `319 
v L "var3" 2 537 "int16" `320 
f B "make32" 2 537 "int32(int8 var1,int8 var2,int16 var3)" `317 
f N "bit_set" 2 538 ""
v L "var" 2 538 "int8" `322 
v L "bit" 2 538 "int8" `323 
f B "bit_set" 2 538 "void(int8 var,int8 bit)" `321 
f N "bit_set" 2 539 ""
v L "var" 2 539 "int16" `325 
v L "bit" 2 539 "int8" `326 
f B "bit_set" 2 539 "void(int16 var,int8 bit)" `324 
f N "bit_set" 2 540 ""
v L "var" 2 540 "int32" `328 
v L "bit" 2 540 "int8" `329 
f B "bit_set" 2 540 "void(int32 var,int8 bit)" `327 
f N "bit_clear" 2 541 ""
v L "var" 2 541 "int8" `331 
v L "bit" 2 541 "int8" `332 
f B "bit_clear" 2 541 "void(int8 var,int8 bit)" `330 
f N "bit_clear" 2 542 ""
v L "var" 2 542 "int16" `334 
v L "bit" 2 542 "int8" `335 
f B "bit_clear" 2 542 "void(int16 var,int8 bit)" `333 
f N "bit_clear" 2 543 ""
v L "var" 2 543 "int32" `337 
v L "bit" 2 543 "int8" `338 
f B "bit_clear" 2 543 "void(int32 var,int8 bit)" `336 
f N "bit_test" 2 544 ""
v L "var" 2 544 "int8" `340 
v L "bit" 2 544 "int8" `341 
f B "bit_test" 2 544 "int8(int8 var,int8 bit)" `339 
f N "bit_test" 2 545 ""
v L "var" 2 545 "int16" `343 
v L "bit" 2 545 "int8" `344 
f B "bit_test" 2 545 "int8(int16 var,int8 bit)" `342 
f N "bit_test" 2 546 ""
v L "var" 2 546 "int32" `346 
v L "bit" 2 546 "int8" `347 
f B "bit_test" 2 546 "int8(int32 var,int8 bit)" `345  "#use delay() Prototypes:"
f N "delay_cycles" 2 549 ""
v L "count" 2 549 "int8" `349 
f B "delay_cycles" 2 549 "void(int8 count)" `348 
f N "delay_ms" 2 550 ""
v L "time" 2 550 "int16" `351 
f B "delay_ms" 2 550 "void(int16 time)" `350 
f N "delay_us" 2 551 ""
v L "time" 2 551 "int16" `353 
f B "delay_us" 2 551 "void(int16 time)" `352  "#use rs232() Prototypes:"
f N "putchar" 2 554 ""
v L "cdata" 2 554 "int8" `355 
f B "putchar" 2 554 "void(int8 cdata)" `354 
f N "putchar" 2 555 ""
v L "cdata" 2 555 "int8" `357 
v L "stream" 2 555 "int8" `358 
f B "putchar" 2 555 "void(int8 cdata,int8 stream)" `356 
f N "puts" 2 556 ""
v L "string" 2 556 "*int8" `360 
f B "puts" 2 556 "void(*int8 string)" `359 
f N "puts" 2 557 ""
v L "string" 2 557 "*int8" `362 
v L "stream" 2 557 "int8" `363 
f B "puts" 2 557 "void(*int8 string,int8 stream)" `361 
f N "getch" 2 558 ""
f B "getch" 2 558 "int8()" `364 
f N "getch" 2 559 ""
v L "stream" 2 559 "int8" `366 
f B "getch" 2 559 "int8(int8 stream)" `365 
f N "gets" 2 560 ""
v L "string" 2 560 "*int8" `368 
f B "gets" 2 560 "void(*int8 string)" `367 
f N "gets" 2 561 ""
v L "string" 2 561 "*int8" `370 
v L "stream" 2 561 "int8" `371 
f B "gets" 2 561 "void(*int8 string,int8 stream)" `369 
f N "kbhit" 2 562 ""
f B "kbhit" 2 562 "int8()" `372 
f N "kbhit" 2 563 ""
v L "stream" 2 563 "int8" `374 
f B "kbhit" 2 563 "int8(int8 stream)" `373 
f N "printf" 2 564 ""
v L "string" 2 564 "*int8" `376 
f B "printf" 2 564 "void(*int8 string,*int8 _VA_LIST)" `375 
f N "fprintf" 2 565 ""
v L "stream" 2 565 "int8" `379 
v L "string" 2 565 "*int8" `380 
f B "fprintf" 2 565 "void(int8 stream,*int8 string,*int8 _VA_LIST)" `378 
f N "putc_send" 2 566 ""
f B "putc_send" 2 566 "void()" `382 
f N "fputc_send" 2 567 ""
v L "stream" 2 567 "int8" `384 
f B "fputc_send" 2 567 "void(int8 stream)" `383 
f N "rcv_buffer_full" 2 568 ""
f B "rcv_buffer_full" 2 568 "int8()" `385 
f N "rcv_buffer_full" 2 569 ""
v L "stream" 2 569 "int8" `387 
f B "rcv_buffer_full" 2 569 "int8(int8 stream)" `386 
f N "rcv_buffer_bytes" 2 570 ""
f B "rcv_buffer_bytes" 2 570 "int16()" `388 
f N "rcv_buffer_bytes" 2 571 ""
v L "stream" 2 571 "int8" `390 
f B "rcv_buffer_bytes" 2 571 "int16(int8 stream)" `389 
f N "tx_buffer_full" 2 572 ""
f B "tx_buffer_full" 2 572 "int8()" `391 
f N "tx_buffer_full" 2 573 ""
v L "stream" 2 573 "int8" `393 
f B "tx_buffer_full" 2 573 "int8(int8 stream)" `392 
f N "tx_buffer_bytes" 2 574 ""
f B "tx_buffer_bytes" 2 574 "int16()" `394 
f N "tx_buffer_bytes" 2 575 ""
v L "stream" 2 575 "int8" `396 
f B "tx_buffer_bytes" 2 575 "int16(int8 stream)" `395  "#use i2c() Prototypes:"
f N "i2c_read" 2 578 ""
f B "i2c_read" 2 578 "int8()" `397 
f N "i2c_read" 2 579 ""
v L "ack" 2 579 "int8" `399 
f B "i2c_read" 2 579 "int8(int8 ack)" `398 
f N "i2c_read" 2 580 ""
v L "stream" 2 580 "int8" `401 
v L "ack" 2 580 "int8" `402 
f B "i2c_read" 2 580 "int8(int8 stream,int8 ack)" `400 
f N "i2c_write" 2 581 ""
v L "data" 2 581 "int8" `404 
f B "i2c_write" 2 581 "int8(int8 data)" `403 
f N "i2c_write" 2 582 ""
v L "stream" 2 582 "int8" `406 
v L "data" 2 582 "int8" `407 
f B "i2c_write" 2 582 "int8(int8 stream,int8 data)" `405 
f N "i2c_start" 2 583 ""
f B "i2c_start" 2 583 "void()" `408 
f N "i2c_start" 2 584 ""
v L "stream" 2 584 "int8" `410 
f B "i2c_start" 2 584 "void(int8 stream)" `409 
f N "i2c_start" 2 585 ""
v L "stream" 2 585 "int8" `412 
v L "restart" 2 585 "int8" `413 
f B "i2c_start" 2 585 "void(int8 stream,int8 restart)" `411 
f N "i2c_stop" 2 586 ""
f B "i2c_stop" 2 586 "void()" `414 
f N "i2c_stop" 2 587 ""
v L "stream" 2 587 "int8" `416 
f B "i2c_stop" 2 587 "void(int8 stream)" `415 
f N "i2c_isr_state" 2 588 ""
f B "i2c_isr_state" 2 588 "int8()" `417 
f N "i2c_slaveaddr" 2 589 ""
v L "addr" 2 589 "int8" `419 
f B "i2c_slaveaddr" 2 589 "void(int8 addr)" `418 
f N "i2c_slaveaddr" 2 590 ""
v L "stream" 2 590 "int8" `421 
v L "addr" 2 590 "int8" `422 
f B "i2c_slaveaddr" 2 590 "void(int8 stream,int8 addr)" `420 
f N "i2c_poll" 2 591 ""
f B "i2c_poll" 2 591 "int8()" `423 
f N "i2c_poll" 2 592 ""
v L "stream" 2 592 "int8" `425 
f B "i2c_poll" 2 592 "int8(int8 stream)" `424 
f N "i2c_init" 2 593 ""
v L "baud" 2 593 "int32" `427 
f B "i2c_init" 2 593 "void(int32 baud)" `426 
f N "i2c_init" 2 594 ""
v L "stream" 2 594 "int8" `429 
v L "baud" 2 594 "int32" `430 
f B "i2c_init" 2 594 "void(int8 stream,int32 baud)" `428 
f N "i2c_transfer" 2 595 ""
v L "address" 2 595 "int8" `432 
v L "wData" 2 595 "*int8" `433 
v L "wCount" 2 595 "int8" `434 
f B "i2c_transfer" 2 595 "int8(int8 address,*int8 wData,int8 wCount)" `431 
f N "i2c_transfer" 2 596 ""
v L "address" 2 596 "int8" `436 
v L "wData" 2 596 "*int8" `437 
v L "wCount" 2 596 "int8" `438 
v L "rData" 2 596 "*int8" `439 
v L "rCount" 2 596 "*int8" `440 
f B "i2c_transfer" 2 596 "int8(int8 address,*int8 wData,int8 wCount,*int8 rData,*int8 rCount)" `435 
f N "i2c_transfer" 2 597 ""
v L "stream" 2 597 "int8" `442 
v L "address" 2 597 "int8" `443 
v L "wData" 2 597 "*int8" `444 
v L "wCount" 2 597 "int8" `445 
f B "i2c_transfer" 2 597 "int8(int8 stream,int8 address,*int8 wData,int8 wCount)" `441 
f N "i2c_transfer" 2 598 ""
v L "stream" 2 598 "int8" `447 
v L "address" 2 598 "int8" `448 
v L "wData" 2 598 "*int8" `449 
v L "wCount" 2 598 "int8" `450 
v L "rData" 2 598 "*int8" `451 
v L "rCount" 2 598 "*int8" `452 
f B "i2c_transfer" 2 598 "int8(int8 stream,int8 address,*int8 wData,int8 wCount,*int8 rData,*int8 rCount)" `446 
f N "i2c_transfer_out" 2 599 ""
v L "address" 2 599 "int8" `454 
v L "wData" 2 599 "*int8" `455 
v L "wCount" 2 599 "int8" `456 
f B "i2c_transfer_out" 2 599 "int8(int8 address,*int8 wData,int8 wCount)" `453 
f N "i2c_transfer_out" 2 600 ""
v L "stream" 2 600 "int8" `458 
v L "address" 2 600 "int8" `459 
v L "wData" 2 600 "*int8" `460 
v L "wCount" 2 600 "int8" `461 
f B "i2c_transfer_out" 2 600 "int8(int8 stream,int8 address,*int8 wData,int8 wCount)" `457 
f N "i2c_transfer_in" 2 601 ""
v L "address" 2 601 "int8" `463 
v L "rData" 2 601 "*int8" `464 
v L "rCount" 2 601 "int8" `465 
f B "i2c_transfer_in" 2 601 "int8(int8 address,*int8 rData,int8 rCount)" `462 
f N "i2c_transfer_in" 2 602 ""
v L "stream" 2 602 "int8" `467 
v L "address" 2 602 "int8" `468 
v L "rData" 2 602 "*int8" `469 
v L "rCount" 2 602 "int8" `470 
f B "i2c_transfer_in" 2 602 "int8(int8 stream,int8 address,*int8 rData,int8 rCount)" `466  "#use spi() Prototypes:"
f N "spi_xfer" 2 605 ""
f B "spi_xfer" 2 605 "int8()" `471 
f N "spi_xfer" 2 606 ""
f G "spi_xfer" 2 606 "int16(int8 data)" `472 
f N "spi_xfer" 2 607 ""
f G "spi_xfer" 2 607 "int32(int8 data)" `472 
f N "spi_xfer" 2 608 ""
v L "data" 2 608 "int8" `473 
f B "spi_xfer" 2 608 "int8(int8 data)" `472 
f N "spi_xfer" 2 609 ""
v L "data" 2 609 "int16" `475 
f B "spi_xfer" 2 609 "int16(int16 data)" `474 
f N "spi_xfer" 2 610 ""
v L "data" 2 610 "int32" `477 
f B "spi_xfer" 2 610 "int32(int32 data)" `476 
f N "spi_xfer" 2 611 ""
v L "stream" 2 611 "int8" `479 
v L "data" 2 611 "int8" `480 
f B "spi_xfer" 2 611 "int8(int8 stream,int8 data)" `478 
f N "spi_xfer" 2 612 ""
v L "stream" 2 612 "int8" `482 
v L "data" 2 612 "int16" `483 
f B "spi_xfer" 2 612 "int16(int8 stream,int16 data)" `481 
f N "spi_xfer" 2 613 ""
v L "stream" 2 613 "int8" `485 
v L "data" 2 613 "int32" `486 
f B "spi_xfer" 2 613 "int32(int8 stream,int32 data)" `484 
f N "spi_xfer" 2 614 ""
v L "stream" 2 614 "int8" `488 
v L "data" 2 614 "int8" `489 
v L "bits" 2 614 "int8" `490 
f B "spi_xfer" 2 614 "int8(int8 stream,int8 data,int8 bits)" `487 
f N "spi_xfer" 2 615 ""
v L "stream" 2 615 "int8" `492 
v L "data" 2 615 "int16" `493 
v L "bits" 2 615 "int8" `494 
f B "spi_xfer" 2 615 "int16(int8 stream,int16 data,int8 bits)" `491 
f N "spi_xfer" 2 616 ""
v L "stream" 2 616 "int8" `496 
v L "data" 2 616 "int32" `497 
v L "bits" 2 616 "int8" `498 
f B "spi_xfer" 2 616 "int32(int8 stream,int32 data,int8 bits)" `495 
f N "spi_init" 2 617 ""
v L "baud" 2 617 "int32" `500 
f B "spi_init" 2 617 "void(int32 baud)" `499 
f N "spi_init" 2 618 ""
v L "stream" 2 618 "int8" `502 
v L "baud" 2 618 "int32" `503 
f B "spi_init" 2 618 "void(int8 stream,int32 baud)" `501 
f N "spi_speed" 2 619 ""
v L "baud" 2 619 "int32" `505 
f B "spi_speed" 2 619 "void(int32 baud)" `504 
f N "spi_speed" 2 620 ""
v L "stream" 2 620 "int8" `507 
v L "baud" 2 620 "int32" `508 
f B "spi_speed" 2 620 "void(int8 stream,int32 baud)" `506 
f N "spi_speed" 2 621 ""
v L "stream" 2 621 "int8" `510 
v L "baud" 2 621 "int32" `511 
v L "clock" 2 621 "int32" `512 
f B "spi_speed" 2 621 "void(int8 stream,int32 baud,int32 clock)" `509 
f N "spi_prewrite" 2 622 ""
v L "data" 2 622 "int8" `514 
f B "spi_prewrite" 2 622 "void(int8 data)" `513 
f N "spi_prewrite" 2 623 ""
v L "data" 2 623 "int16" `516 
f B "spi_prewrite" 2 623 "void(int16 data)" `515 
f N "spi_prewrite" 2 624 ""
v L "data" 2 624 "int32" `518 
f B "spi_prewrite" 2 624 "void(int32 data)" `517 
f N "spi_prewrite" 2 625 ""
v L "??65535" 2 625 "int8" `520 
v L "data" 2 625 "int8" `521 
f B "spi_prewrite" 2 625 "void(int8 ,int8 data)" `519 
f N "spi_prewrite" 2 626 ""
v L "??65535" 2 626 "int8" `523 
v L "data" 2 626 "int16" `524 
f B "spi_prewrite" 2 626 "void(int8 ,int16 data)" `522 
f N "spi_prewrite" 2 627 ""
v L "??65535" 2 627 "int8" `526 
v L "data" 2 627 "int32" `527 
f B "spi_prewrite" 2 627 "void(int8 ,int32 data)" `525 
f N "spi_xfer_in" 2 628 ""
f B "spi_xfer_in" 2 628 "int8()" `528 
f N "spi_xfer_in" 2 629 ""
f G "spi_xfer_in" 2 629 "int16(int8 bits)" `529 
f N "spi_xfer_in" 2 630 ""
f G "spi_xfer_in" 2 630 "int32(int8 bits)" `529 
f N "spi_xfer_in" 2 631 ""
v L "bits" 2 631 "int8" `530 
f B "spi_xfer_in" 2 631 "int8(int8 bits)" `529 
f N "spi_xfer_in" 2 632 ""
v L "bits" 2 632 "int8" `532 
f G "spi_xfer_in" 2 632 "int16(int8 bits,int8 bits)" `531 
f N "spi_xfer_in" 2 633 ""
v L "bits" 2 633 "int8" `532 
f G "spi_xfer_in" 2 633 "int32(int8 bits,int8 bits)" `531 
f N "spi_xfer_in" 2 634 ""
v L "stream" 2 634 "int8" `532 
v L "bits" 2 634 "int8" `533 
f B "spi_xfer_in" 2 634 "int8(int8 stream,int8 bits)" `531 
f N "spi_xfer_in" 2 635 ""
v L "stream" 2 635 "int8" `532 
v L "bits" 2 635 "int8" `536 
f G "spi_xfer_in" 2 635 "int16(int8 stream,int8 bits,int16 count)" `534 
f N "spi_xfer_in" 2 636 ""
v L "stream" 2 636 "int8" `532 
v L "bits" 2 636 "int8" `536 
f G "spi_xfer_in" 2 636 "int32(int8 stream,int8 bits,int16 count)" `534 
f N "spi_transfer" 2 637 ""
v L "wData" 2 637 "*int8" `535 
v L "rData" 2 637 "*int8" `536 
v L "count" 2 637 "int16" `537 
f B "spi_transfer" 2 637 "void(*int8 wData,*int8 rData,int16 count)" `534 
f N "spi_transfer" 2 638 ""
v L "stream" 2 638 "int8" `539 
v L "wData" 2 638 "*int8" `540 
v L "rData" 2 638 "*int8" `541 
v L "count" 2 638 "int16" `542 
f B "spi_transfer" 2 638 "void(int8 stream,*int8 wData,*int8 rData,int16 count)" `538 
f N "spi_transfer_write" 2 639 ""
v L "wData" 2 639 "*int8" `544 
v L "count" 2 639 "int16" `545 
f B "spi_transfer_write" 2 639 "void(*int8 wData,int16 count)" `543 
f N "spi_transfer_write" 2 640 ""
v L "stream" 2 640 "int8" `547 
v L "wData" 2 640 "*int8" `548 
v L "count" 2 640 "int16" `549 
f B "spi_transfer_write" 2 640 "void(int8 stream,*int8 wData,int16 count)" `546 
f N "spi_transfer_read" 2 641 ""
v L "rData" 2 641 "*int8" `551 
v L "count" 2 641 "int16" `552 
f B "spi_transfer_read" 2 641 "void(*int8 rData,int16 count)" `550 
f N "spi_transfer_read" 2 642 ""
v L "stream" 2 642 "int8" `554 
v L "rData" 2 642 "*int8" `555 
v L "count" 2 642 "int16" `556 
f B "spi_transfer_read" 2 642 "void(int8 stream,*int8 rData,int16 count)" `553  "#use rtos() Prototypes:"
f N "rtos_run" 2 645 ""
f B "rtos_run" 2 645 "void()" `557 
f N "rtos_yield" 2 646 ""
f B "rtos_yield" 2 646 "void()" `558 
f N "rtos_enable" 2 647 ""
v L "task" 2 647 "int8" `560 
f B "rtos_enable" 2 647 "void(int8 task)" `559 
f N "rtos_disable" 2 648 ""
v L "task" 2 648 "int8" `562 
f B "rtos_disable" 2 648 "void(int8 task)" `561 
f N "rtos_terminate" 2 649 ""
f B "rtos_terminate" 2 649 "void()" `563 
f N "rtos_await" 2 650 ""
v L "flag" 2 650 "int8" `565 
f B "rtos_await" 2 650 "void(int8 flag)" `564 
f N "rtos_wait" 2 651 ""
v L "sem" 2 651 "int8" `567 
f B "rtos_wait" 2 651 "void(int8 sem)" `566 
f N "rtos_signal" 2 652 ""
v L "sem" 2 652 "int8" `569 
f B "rtos_signal" 2 652 "void(int8 sem)" `568 
f N "rtos_msg_send" 2 653 ""
v L "task" 2 653 "int8" `571 
v L "msg" 2 653 "int8" `572 
f B "rtos_msg_send" 2 653 "void(int8 task,int8 msg)" `570 
f N "rtos_msg_read" 2 654 ""
f B "rtos_msg_read" 2 654 "int8()" `573 
f N "rtos_msg_poll" 2 655 ""
f B "rtos_msg_poll" 2 655 "int8()" `574 
f N "rtos_overrun" 2 656 ""
v L "task" 2 656 "int8" `576 
f B "rtos_overrun" 2 656 "int8(int8 task)" `575 
f N "rtos_stats" 2 657 ""
v L "task" 2 657 "int8" `578 
v L "stat" 2 657 "*int8" `579 
f B "rtos_stats" 2 657 "void(int8 task,*int8 stat)" `577  "#use timer() Prototypes:"
f N "get_ticks" 2 660 ""
f B "get_ticks" 2 660 "int8()" `580 
f N "get_ticks" 2 661 ""
f G "get_ticks" 2 661 "int16(int8 stream)" `581 
f N "get_ticks" 2 662 ""
f G "get_ticks" 2 662 "int32(int8 stream)" `581 
f N "get_ticks" 2 663 ""
v L "stream" 2 663 "int8" `582 
f B "get_ticks" 2 663 "int8(int8 stream)" `581 
f N "get_ticks" 2 664 ""
v L "stream" 2 664 "int8" `584 
f G "get_ticks" 2 664 "int16(int8 stream)" `583 
f N "get_ticks" 2 665 ""
v L "stream" 2 665 "int8" `584 
f G "get_ticks" 2 665 "int32(int8 stream)" `583 
f N "set_ticks" 2 666 ""
v L "value" 2 666 "int8" `584 
f B "set_ticks" 2 666 "void(int8 value)" `583 
f N "set_ticks" 2 667 ""
v L "value" 2 667 "int16" `586 
f B "set_ticks" 2 667 "void(int16 value)" `585 
f N "set_ticks" 2 668 ""
v L "value" 2 668 "int32" `588 
f B "set_ticks" 2 668 "void(int32 value)" `587 
f N "set_ticks" 2 669 ""
v L "stream" 2 669 "int8" `590 
v L "value" 2 669 "int8" `591 
f B "set_ticks" 2 669 "void(int8 stream,int8 value)" `589 
f N "set_ticks" 2 670 ""
v L "stream" 2 670 "int8" `593 
v L "value" 2 670 "int16" `594 
f B "set_ticks" 2 670 "void(int8 stream,int16 value)" `592 
f N "set_ticks" 2 671 ""
v L "stream" 2 671 "int8" `596 
v L "value" 2 671 "int32" `597 
f B "set_ticks" 2 671 "void(int8 stream,int32 value)" `595  "#use pwm() Prototypes:"
f N "pwm_on" 2 674 ""
f B "pwm_on" 2 674 "void()" `598 
f N "pwm_on" 2 675 ""
v L "stream" 2 675 "int8" `600 
f B "pwm_on" 2 675 "void(int8 stream)" `599 
f N "pwm_off" 2 676 ""
f B "pwm_off" 2 676 "void()" `601 
f N "pwm_off" 2 677 ""
v L "stream" 2 677 "int8" `603 
f B "pwm_off" 2 677 "void(int8 stream)" `602 
f N "pwm_set_duty" 2 678 ""
v L "duty" 2 678 "int16" `605 
f B "pwm_set_duty" 2 678 "void(int16 duty)" `604 
f N "pwm_set_duty" 2 679 ""
v L "stream" 2 679 "int8" `607 
v L "duty" 2 679 "int16" `608 
f B "pwm_set_duty" 2 679 "void(int8 stream,int16 duty)" `606 
f N "pwm_set_duty_percent" 2 680 ""
v L "percent" 2 680 "int16" `610 
f B "pwm_set_duty_percent" 2 680 "void(int16 percent)" `609 
f N "pwm_set_duty_percent" 2 681 ""
v L "stream" 2 681 "int8" `612 
v L "percent" 2 681 "int16" `613 
f B "pwm_set_duty_percent" 2 681 "void(int8 stream,int16 percent)" `611 
f N "pwm_set_frequency" 2 682 ""
v L "frequency" 2 682 "int32" `615 
f B "pwm_set_frequency" 2 682 "void(int32 frequency)" `614 
f N "pwm_set_frequency" 2 683 ""
v L "stream" 2 683 "int8" `617 
v L "frequency" 2 683 "int32" `618 
f B "pwm_set_frequency" 2 683 "void(int8 stream,int32 frequency)" `616  "#use capture() Prototypes:"
f N "get_capture_time" 2 686 ""
f B "get_capture_time" 2 686 "int16()" `619 
f N "get_capture_time" 2 687 ""
v L "stream" 2 687 "int8" `621 
f B "get_capture_time" 2 687 "int16(int8 stream)" `620 
f N "get_capture_event" 2 688 ""
f B "get_capture_event" 2 688 "int8()" `622 
f N "get_capture_event" 2 689 ""
v L "stream" 2 689 "int8" `624 
f B "get_capture_event" 2 689 "int8(int8 stream)" `623  "Enviroment Prototypes:"
c L "get_capture_event" 2 3 2 "FUNCTION"
f N "goto_address" 2 702 ""
v L "address" 2 702 "int16" `626 
f B "goto_address" 2 702 "void(int16 address)" `625 
f N "label_address" 2 703 ""
v L "label" 2 703 "int16" `628 
f B "label_address" 2 703 "int16(int16 label)" `627  "Program Memory Read Prototypes:"
f N "read_program_memory" 2 706 ""
v L "address" 2 706 "int16" `630 
v L "dataptr" 2 706 "*int8" `631 
v L "count" 2 706 "int16" `632 
f B "read_program_memory" 2 706 "void(int16 address,*int8 dataptr,int16 count)" `629 
f N "read_program_eeprom" 2 707 ""
v L "address" 2 707 "int16" `634 
f B "read_program_eeprom" 2 707 "int16(int16 address)" `633  "Program Memory Write Prototypes:"
f N "erase_program_eeprom" 2 710 ""
v L "address" 2 710 "int16" `636 
f B "erase_program_eeprom" 2 710 "void(int16 address)" `635 
f N "write_program_memory" 2 711 ""
v L "address" 2 711 "int16" `638 
v L "dataptr" 2 711 "*int8" `639 
v L "count" 2 711 "int16" `640 
f B "write_program_memory" 2 711 "void(int16 address,*int8 dataptr,int16 count)" `637 
f N "write_program_eeprom" 2 712 ""
v L "address" 2 712 "int16" `642 
v L "data" 2 712 "int16" `643 
f B "write_program_eeprom" 2 712 "void(int16 address,int16 data)" `641  "EEPROM Prototypes:"
d G "__EEADDRESS__" 2 719 "unsigned int8"
f N "read_eeprom" 2 722 ""
v L "address" 2 722 "int8" `645 
f B "read_eeprom" 2 722 "int8(int8 address)" `644 
f N "write_eeprom" 2 723 ""
v L "address" 2 723 "int8" `647 
v L "value" 2 723 "int8" `648 
f B "write_eeprom" 2 723 "void(int8 address,int8 value)" `646  "INT"
c L "write_eeprom" 2 3 4 "FUNCTION"
f N "enable_interrupts" 2 730 ""
v L "interrupt" 2 730 "int32" `650 
f B "enable_interrupts" 2 730 "void(int32 interrupt)" `649 
f N "disable_interrupts" 2 731 ""
v L "interrupt" 2 731 "int32" `652 
f B "disable_interrupts" 2 731 "void(int32 interrupt)" `651 
f N "clear_interrupt" 2 732 ""
v L "interrupt" 2 732 "int32" `654 
f B "clear_interrupt" 2 732 "void(int32 interrupt)" `653 
f N "interrupt_active" 2 733 ""
v L "interrupt" 2 733 "int32" `656 
f B "interrupt_active" 2 733 "int8(int32 interrupt)" `655 
f N "interrupt_enabled" 2 734 ""
v L "interrupt" 2 734 "int32" `658 
f B "interrupt_enabled" 2 734 "int8(int32 interrupt)" `657 
f N "ext_int_edge" 2 735 ""
v L "source" 2 735 "int8" `660 
v L "edge" 2 735 "int8" `661 
f B "ext_int_edge" 2 735 "void(int8 source,int8 edge)" `659 
f N "jump_to_isr" 2 736 ""
v L "address" 2 736 "int16" `663 
f B "jump_to_isr" 2 736 "void(int16 address)" `662  "Constants used in EXT_INT_EDGE() are:"
d G "L_TO_H" 2 738 "0x40"
d G "H_TO_L" 2 739 "0"
d G "GLOBAL" 2 741 "0xF2C0"
d G "PERIPH" 2 742 "0xF240"
d G "INT_RTCC" 2 743 "0x00F220"
d G "INT_TIMER0" 2 744 "0x00F220"
d G "INT_TIMER1" 2 745 "0x009D01"
d G "INT_TIMER2" 2 746 "0x009D02"
d G "INT_TIMER3" 2 747 "0x00A002"
d G "INT_EXT_L2H" 2 748 "0x5000F210"
d G "INT_EXT_H2L" 2 749 "0x6000F210"
d G "INT_EXT" 2 750 "0x00F210"
d G "INT_EXT1_L2H" 2 751 "0x5001F008"
d G "INT_EXT1_H2L" 2 752 "0x6001F008"
d G "INT_EXT1" 2 753 "0x00F008"
d G "INT_EXT2_L2H" 2 754 "0x5002F010"
d G "INT_EXT2_H2L" 2 755 "0x6002F010"
d G "INT_EXT2" 2 756 "0x00F010"
d G "INT_RB" 2 757 "0x00FFF208"
d G "INT_AD" 2 758 "0x009D40"
d G "INT_RDA" 2 759 "0x009D20"
d G "INT_TBE" 2 760 "0x009D10"
d G "INT_SSP" 2 761 "0x009D08"
d G "INT_CCP1" 2 762 "0x009D04"
d G "INT_BUSCOL" 2 763 "0x00A008"
d G "INT_LOWVOLT" 2 764 "0x00A004"
d G "INT_CANIRX" 2 765 "0x00A380"
d G "INT_CANWAKE" 2 766 "0x00A340"
d G "INT_CANERR" 2 767 "0x00A320"
d G "INT_EEPROM" 2 768 "0x00A010"
d G "INT_CANTX2" 2 769 "0x00A310"
d G "INT_CANTX1" 2 770 "0x00A308"
d G "INT_CANTX0" 2 771 "0x00A304"
d G "INT_CANRX1" 2 772 "0x00A302"
d G "INT_CANRX0" 2 773 "0x00A301"
d G "INT_OSCF" 2 774 "0x00A080"
D G "SECURITY_MARGIN" 1 8 "5"
D G "PRESET_ACC1_MIN" 1 11 "101"
D G "PRESET_ACC1_MAX" 1 12 "174"
D G "PRESET_ACC2_MIN" 1 15 "130"
D G "PRESET_ACC2_MAX" 1 16 "201"
D G "PRESET_ACC3_MIN" 1 19 "31"
D G "PRESET_ACC3_MAX" 1 20 "166"
D G "PRESET_BRK_MIN" 1 23 "25"
D G "PRESET_BRK_MAX" 1 24 "88"
D G "A1UP" 0 4 "225"
D G "A1DOWN" 0 5 "9"
D G "A2UP" 0 7 "200"
D G "A2DOWN" 0 8 "0"
D G "A3UP" 0 10 "155"
D G "A3DOWN" 0 11 "40"
D G "BRKUP" 0 15 "95"
D G "BRKDOWN" 0 16 "23"
D G "REGUP" 0 20 "255"
D G "REGDOWN" 0 21 "5"
D G "CAN_USE_EXTENDED_ID" 0 24 "FALSE"
D G "CAN_DO_DEBUG" 0 25 "FALSE"
D G "CAN_BRG_SEG_2_PHASE_TS" 0 26 "TRUE"
D G "CAN_BRG_PRESCALAR" 0 29 "0"
D G "CAN_BRG_SYNCH_JUMP_WIDTH" 0 30 "2"
D G "CAN_BRG_PROPAGATION_TIME" 0 31 "0"
D G "CAN_BRG_PHASE_SEGMENT_1" 0 32 "4"
D G "CAN_BRG_PHASE_SEGMENT_2" 0 33 "2"
D G "CAN_BRG_WAKE_FILTER" 0 35 "TRUE"
D G "CAN_BRG_SAM" 0 36 "FALSE"
D G "__CAN_18F4580_C__" 3 152 ""
D G "__CCS_CAN18F4580_LIB_DEFINES__" 4 20 ""
D G "CAN_USE_RX_DOUBLE_BUFFER" 4 63 "TRUE" "if buffer 0 overflows, do NOT use buffer 1 to put buffer 0 data"
D G "CAN_ENABLE_DRIVE_HIGH" 4 67 "0"
D G "CAN_ENABLE_CAN_CAPTURE" 4 71 "0"
D G "CAN_ENABLE_CANTX2" 4 75 "0" "0 CANTX2 disabled, 1 CANTX2 enabled"
D G "CAN_CANTX2_SOURCE" 4 79 "0" "0 source is invert of CANTX1, 1 source is CAN Clock"
C L "jump_to_isr" 4 2 1 "FUNCTION"
E G "CAN_OP_CONFIG" 4 87 "4" `669 
E G "CAN_OP_LISTEN" 4 88 "3" `670 
E G "CAN_OP_LOOPBACK" 4 89 "2" `671 
E G "CAN_OP_DISABLE" 4 90 "1" `672 
E G "CAN_OP_NORMAL" 4 90 "0" `673 
V G "" 4 90 ""
E G "CAN_FUN_OP_LEGACY" 4 93 "0" `675 
E G "CAN_FUN_OP_ENHANCED" 4 94 "1" `676 
E G "CAN_FUN_OP_ENHANCED_FIFO" 4 94 "2" `677 
V G "" 4 94 ""
E G "CAN_WIN_RX0" 4 97 "0" `679 
E G "CAN_WIN_RX1" 4 98 "5" `680 
E G "CAN_WIN_TX0" 4 99 "4" `681 
E G "CAN_WIN_TX1" 4 100 "3" `682 
E G "CAN_WIN_TX2" 4 100 "2" `683 
V G "" 4 100 ""
E G "CAN_FIFO_MB7" 4 103 "7" `685 
E G "CAN_FIFO_MB6" 4 104 "6" `686 
E G "CAN_FIFO_MB5" 4 105 "5" `687 
E G "CAN_FIFO_MB4" 4 106 "4" `688 
E G "CAN_FIFO_MB3" 4 107 "3" `689 
E G "CAN_FIFO_MB2" 4 108 "2" `690 
E G "CAN_FIFO_MB1" 4 109 "1" `691 
E G "CAN_FIFO_MB0" 4 109 "0" `692 
V G "" 4 109 "" "Control register configurations for modes 0, 1, and 2"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "CANCON" 4 118 "{int1 void0,int3 win,int1 abat,int3 reqop}" `698 
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "CANCON_MODE_1" 4 126 "{int4 void3210,int1 abat,int3 reqop}" `703 
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "CANCON_MODE_2" 4 134 "{int4 fp,int1 abat,int3 reqop}" `708 
C L "jump_to_isr" 4 2 2 "FUNCTION"
E G "ECAN_LEGACY" 4 142 "0" `710 
E G "ECAN_ENHANCED_LEGACY" 4 142 "1" `711 
E G "ECAN_ENHANCED_FIFO" 4 142 "2" `712 
V G "" 4 142 ""
E G "AF012_BRGCON23" 4 144 "0" `714 
E G "AF345_BRGCON1_" 4 145 "1" `715 
E G "AFM_ERROR_ICON" 4 146 "2" `716 
E G "TX0" 4 147 "3" `717 
E G "TX1" 4 148 "4" `718 
E G "TX2" 4 149 "5" `719 
E G "AF678" 4 150 "6" `720 
E G "AccF91011" 4 151 "7" `721 
E G "AccF121314" 4 152 "8" `722 
E G "AccF15" 4 153 "9" `723 
E G "RXINT01" 4 154 "15" `724 
E G "RX0" 4 155 "16" `725 
E G "RX1" 4 156 "17" `726 
E G "TXRX0" 4 157 "18" `727 
E G "TXRX1" 4 158 "19" `728 
E G "TXRX2" 4 159 "20" `729 
E G "TXRX3" 4 160 "21" `730 
E G "TXRX4" 4 161 "22" `731 
E G "TXRX5" 4 161 "23" `732 
V G "" 4 161 "" "ecan control register mode 1, 2, & 3"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "ECANCON" 4 168 "{int5 ewin,int1 fifowm,int2 mdsel}" `737 
C L "jump_to_isr" 4 2 2 "FUNCTION"
E G "CAN_INT_WAKEUP" 4 178 "7" `739 
E G "CAN_INT_RX0" 4 179 "6" `740 
E G "CAN_INT_RX1" 4 180 "5" `741 
E G "CAN_INT_TX0" 4 181 "4" `742 
E G "CAN_INT_TX1" 4 182 "3" `743 
E G "CAN_INT_TX2" 4 183 "2" `744 
E G "CAN_INT_ERROR" 4 184 "1" `745 
E G "CAN_INT_NO" 4 184 "0" `746 
V G "" 4 184 ""
E G "CAN_EINT_NO" 4 187 "0" `748 
E G "CAN_EINT_ERROR" 4 188 "2" `749 
E G "CAN_EINT_TX2" 4 189 "4" `750 
E G "CAN_EINT_TX1" 4 190 "6" `751 
E G "CAN_EINT_TX0" 4 191 "8" `752 
E G "CAN_EINT_RX1" 4 192 "17" `753 
E G "CAN_EINT_RX0" 4 193 "16" `754 
E G "CAN_EINT_WAKEUP" 4 194 "14" `755 
E G "CAN_EINT_RXB0" 4 195 "16" `756 
E G "CAN_EINT_RXB1" 4 196 "17" `757 
E G "CAN_EINT_B0" 4 197 "18" `758 
E G "CAN_EINT_B1" 4 198 "19" `759 
E G "CAN_EINT_B2" 4 199 "20" `760 
E G "CAN_EINT_B3" 4 200 "21" `761 
E G "CAN_EINT_B4" 4 201 "22" `762 
E G "CAN_EINT_B5" 4 201 "23" `763 
V G "" 4 201 "" "can status register READ-ONLY"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "CANSTAT" 4 209 "{int1 void0,int3 icode,int1 void4,int3 opmode}" `769 
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "CANSTAT_MODE_1" 4 216 "{int5 eicode,int3 opmode}" `773 
C L "jump_to_isr" 4 2 2 "FUNCTION"
V G "CANSTAT_MODE_2" 4 223 "{int5 eicode,int3 opmode}" `777 
C L "jump_to_isr" 4 2 3 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "COMSTAT" 4 242 "{int1 ewarn,int1 rxwarn,int1 txwarn,int1 rxbp,int1 txbp,int1 txbo,int1 rx1ovfl,int1 rx0ovfl}" `787 
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "COMSTAT_MODE_1" 4 255 "{int1 ewarn,int1 rxwarn,int1 txwarn,int1 rxbp,int1 txbp,int1 txbo,int1 rxnovfl,int1 void7}" `797 
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "COMSTAT_MODE_2" 4 268 "{int1 ewarn,int1 rxwarn,int1 txwarn,int1 rxbp,int1 txbp,int1 txbo,int1 rxnovfl,int1 fifoempty}" `807 
C L "jump_to_isr" 4 2 3 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "BRGCON1" 4 280 "{int6 brp,int2 sjw}" `811 
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "BRGCON2" 4 289 "{int3 prseg,int3 seg1ph,int1 sam,int1 seg2phts}" `817 
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "BRGCON3" 4 298 "{int3 seg2ph,int3 void543,int1 wakfil,int1 void7}" `823 
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "CIOCON" 4 310 "{int4 void3210,int1 cancap,int1 endrhi,int1 tx2en,int1 tx2src}" `830 
C L "jump_to_isr" 4 2 3 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "TXB0CON" 4 327 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 void7}" `839 
V G "TXB1CON" 4 328 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 void7}" `840 
V G "TXB2CON" 4 329 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 void7}" `841 
V G "TXBaCON" 4 330 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 void7}" `842 
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "TXB0CON_MODE_1" 4 347 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 txbif}" `851 
V G "TXB0CON_MODE_2" 4 348 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 txbif}" `852 
V G "TXB1CON_MODE_1" 4 349 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 txbif}" `853 
V G "TXB1CON_MODE_2" 4 350 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 txbif}" `854 
V G "TXB2CON_MODE_1" 4 351 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 txbif}" `855 
V G "TXB2CON_MODE_2" 4 352 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 txbif}" `856 
V G "TXBaCON_MODE_1" 4 353 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 txbif}" `857 
V G "TXBaCON_MODE_2" 4 354 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 txbif}" `858 
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
D G "RX0MASK" 4 382 "getenv("SFR:RXM0EIDL")" "0xF1B    //rxm0eidl"
D G "RX1MASK" 4 383 "getenv("SFR:RXM1EIDL")" "0xF1F    //rxm1eidl"
D G "RX0FILTER0" 4 384 "getenv("SFR:RXF0EIDL")" "0xF03    //rxf0eidl"
D G "RX0FILTER1" 4 385 "getenv("SFR:RXF1EIDL")" "0xF07    //rxf1eidl"
D G "RX1FILTER2" 4 386 "getenv("SFR:RXF2EIDL")" "0xF0B    //rxf2eidl"
D G "RX1FILTER3" 4 387 "getenv("SFR:RXF3EIDL")" "0xF0F    //rxf3eidl"
D G "RX1FILTER4" 4 388 "getenv("SFR:RXF4EIDL")" "0xF13    //rxf4eidl"
D G "RX1FILTER5" 4 389 "getenv("SFR:RXF5EIDL")" "0xF17    //rxf5eidl"
D G "RXB0ID" 4 390 "getenv("SFR:RXB0EIDL")" "0xF64    //rxb0eidl"
D G "RXB1ID" 4 391 "getenv("SFR:RXB1EIDL")" "0xF54    //rxb1eidl"
D G "TXB0ID" 4 392 "getenv("SFR:TXB0EIDL")" "0xF44    //txb0eidl"
D G "TXB1ID" 4 393 "getenv("SFR:TXB1EIDL")" "0xF34    //txb1eidl"
D G "TXB2ID" 4 394 "getenv("SFR:TXB2EIDL")" "0xF24    //txb2eidl"
D G "B0ID" 4 395 "getenv("SFR:B0EIDL")" "0xE24    //b0eidl"
D G "B1ID" 4 396 "getenv("SFR:B1EIDL")" "0xE34    //b1eidl"
D G "B2ID" 4 397 "getenv("SFR:B2EIDL")" "0xE44    //b2eidl"
D G "B3ID" 4 398 "getenv("SFR:B3EIDL")" "0xE54    //b3eidl"
D G "B4ID" 4 399 "getenv("SFR:B4EIDL")" "0xE64    //b4eidl"
D G "B5ID" 4 400 "getenv("SFR:B5EIDL")" "0xE74    //b5eidl"
D G "TXRXBaID" 4 401 "getenv("SFR:RXB0EIDL")" "0xF64"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "TXB0DLC" 4 418 "{int4 dlc,int2 void54,int1 rtr,int1 void7}" `882 
V G "TXB1DLC" 4 419 "{int4 dlc,int2 void54,int1 rtr,int1 void7}" `883 
V G "TXB2DLC" 4 420 "{int4 dlc,int2 void54,int1 rtr,int1 void7}" `884 
V G "TXBaDLC" 4 421 "{int4 dlc,int2 void54,int1 rtr,int1 void7}" `885 
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 2 "FUNCTION"
E G "CAN_RX_ALL" 4 436 "3" `888 
E G "CAN_RX_EXT" 4 436 "2" `889 
E G "CAN_RX_STD" 4 436 "1" `890 
E G "CAN_RX_VALID" 4 436 "0" `891 
V G "" 4 436 ""
E G "RXF0" 4 437 "0" `893 
E G "RXF1" 4 437 "1" `894 
E G "RXF2" 4 437 "2" `895 
E G "RXF3" 4 437 "3" `896 
E G "RXF4" 4 437 "4" `897 
E G "RXF5" 4 438 "5" `898 
E G "RXF6" 4 438 "6" `899 
E G "RXF7" 4 438 "7" `900 
E G "RXF8" 4 438 "8" `901 
E G "RXF9" 4 438 "9" `902 
E G "RXF10" 4 438 "10" `903 
E G "RXF11" 4 439 "11" `904 
E G "RXF12" 4 439 "12" `905 
E G "RXF13" 4 439 "13" `906 
E G "RXF14" 4 439 "14" `907 
E G "RXF15" 4 439 "15" `908 
V G "" 4 439 "" "receive buffer 0 control register mode 0"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "RXB0CON" 4 451 "{int1 filthit0,int1 jtoff,int1 rxb0dben,int1 rxrtrro,int1 void4,int2 rxm,int1 rxful}" `917 
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "RXB0CON_MODE_1" 4 461 "{int5 filthit,int1 rtrro,int1 rxm1,int1 rxful}" `923 
V G "RXB0CON_MODE_2" 4 462 "{int5 filthit,int1 rtrro,int1 rxm1,int1 rxful}" `924 
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "RXB1CON" 4 473 "{int3 filthit,int1 rxrtrro,int1 void4,int2 rxm,int1 rxful}" `931 
C L "jump_to_isr" 4 2 2 "FUNCTION"
V G "RXB1CON_MODE_1" 4 477 "{int5 filthit,int1 rtrro,int1 rxm1,int1 rxful}" `932 
V G "RXB1CON_MODE_2" 4 478 "{int5 filthit,int1 rtrro,int1 rxm1,int1 rxful}" `933 
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 2 "FUNCTION"
E G "B0" 4 488 "4" `935 
E G "B1" 4 488 "8" `936 
E G "B2" 4 488 "16" `937 
E G "B3" 4 488 "32" `938 
E G "B4" 4 488 "64" `939 
E G "B5" 4 488 "128" `940 
V G "" 4 488 "" "bsel0"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "BSEL0" 4 499 "{int2 void10,int1 b0txen,int1 b1txen,int1 b2txen,int1 b3txen,int1 b4txen,int1 b5txen}" `949 
C L "jump_to_isr" 4 2 2 "FUNCTION"
E G "AF0" 4 508 "0" `951 
E G "AF1" 4 508 "1" `952 
E G "AF2" 4 508 "2" `953 
E G "AF3" 4 508 "3" `954 
E G "AF4" 4 509 "4" `955 
E G "AF5" 4 509 "5" `956 
E G "AF6" 4 509 "6" `957 
E G "AF7" 4 509 "7" `958 
E G "AF8" 4 509 "8" `959 
E G "AF9" 4 510 "9" `960 
E G "AF10" 4 510 "10" `961 
E G "AF11" 4 510 "11" `962 
E G "AF12" 4 510 "12" `963 
E G "AF13" 4 510 "13" `964 
E G "AF14" 4 511 "14" `965 
E G "AF15" 4 511 "15" `966 
V G "" 4 511 "" "Bn control register in receive mode"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "B0CONR" 4 532 "{int5 filhit,int1 rxrtrro,int1 rxm1,int1 rxful}" `980 
V G "B1CONR" 4 533 "{int5 filhit,int1 rxrtrro,int1 rxm1,int1 rxful}" `981 
V G "B2CONR" 4 534 "{int5 filhit,int1 rxrtrro,int1 rxm1,int1 rxful}" `982 
V G "B3CONR" 4 535 "{int5 filhit,int1 rxrtrro,int1 rxm1,int1 rxful}" `983 
V G "B4CONR" 4 536 "{int5 filhit,int1 rxrtrro,int1 rxm1,int1 rxful}" `984 
V G "B5CONR" 4 537 "{int5 filhit,int1 rxrtrro,int1 rxm1,int1 rxful}" `985  "struct bytes, used for access to specific bits"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "B0CONT" 4 553 "{int2 txpri,int1 rtren,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 txbif}" `992 
V G "B1CONT" 4 554 "{int2 txpri,int1 rtren,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 txbif}" `993 
V G "B2CONT" 4 555 "{int2 txpri,int1 rtren,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 txbif}" `994 
V G "B3CONT" 4 556 "{int2 txpri,int1 rtren,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 txbif}" `995 
V G "B4CONT" 4 557 "{int2 txpri,int1 rtren,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 txbif}" `996 
V G "B5CONT" 4 558 "{int2 txpri,int1 rtren,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 txbif}" `997  "struct bytes, used for access to specific bits"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 3 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "B0DLCR" 4 596 "{int4 dlc,int2 void45,int1 rxrtr,int1 void7}" `1014 
V G "B1DLCR" 4 597 "{int4 dlc,int2 void45,int1 rxrtr,int1 void7}" `1015 
V G "B2DLCR" 4 598 "{int4 dlc,int2 void45,int1 rxrtr,int1 void7}" `1016 
V G "B3DLCR" 4 599 "{int4 dlc,int2 void45,int1 rxrtr,int1 void7}" `1017 
V G "B4DLCR" 4 600 "{int4 dlc,int2 void45,int1 rxrtr,int1 void7}" `1018 
V G "B5DLCR" 4 601 "{int4 dlc,int2 void45,int1 rxrtr,int1 void7}" `1019 
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "B0DLCT" 4 609 "{int4 dlc,int2 void45,int1 txrtr,int1 void7}" `1020 
V G "B1DLCT" 4 610 "{int4 dlc,int2 void45,int1 txrtr,int1 void7}" `1021 
V G "B2DLCT" 4 611 "{int4 dlc,int2 void45,int1 txrtr,int1 void7}" `1022 
V G "B3DLCT" 4 612 "{int4 dlc,int2 void45,int1 txrtr,int1 void7}" `1023 
V G "B4DLCT" 4 613 "{int4 dlc,int2 void45,int1 txrtr,int1 void7}" `1024 
V G "B5DLCT" 4 614 "{int4 dlc,int2 void45,int1 txrtr,int1 void7}" `1025 
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 3 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 2 "FUNCTION"
E G "ACCEPTANCE_MASK_0" 4 724 "0" `1099 
E G "ACCEPTANCE_MASK_1" 4 725 "1" `1100 
E G "FILTER_15" 4 725 "2" `1101 
E G "NO_MASK" 4 725 "3" `1102 
V G "" 4 725 "" "msel0"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "MSEL0" 4 733 "{int2 fil0,int2 fil1,int2 fil2,int2 fil3}" `1108  "msel1"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "MSEL1" 4 741 "{int2 fil4,int2 fil5,int2 fil6,int2 fil7}" `1114  "msel2"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "MSEL2" 4 749 "{int2 fil8,int2 fil9,int2 fil10,int2 fil11}" `1120  "msel3"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "MSEL3" 4 757 "{int2 fil12,int2 fil13,int2 fil14,int2 fil15}" `1126 
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 3 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "txbie" 4 777 "{int2 void01,int1 txb0ie,int1 txb1ie,int1 txb2ie,int8 void567}" `1133 
C L "jump_to_isr" 4 2 3 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "bie0" 4 797 "{int1 rxb0ie,int1 rxb1ie,int1 b0ie,int1 b1ie,int1 b2ie,int1 b3ie,int1 b4ie,int1 b5ie}" `1143 
C L "jump_to_isr" 4 2 1 "FUNCTION"
E G "RXF0EN" 4 803 "1" `1145 
E G "RXF1EN" 4 803 "2" `1146 
E G "RXF2EN" 4 803 "4" `1147 
E G "RXF3EN" 4 804 "8" `1148 
E G "RXF4EN" 4 804 "16" `1149 
E G "RXF5EN" 4 804 "32" `1150 
E G "RXF6EN" 4 804 "64" `1151 
E G "RXF7EN" 4 805 "128" `1152 
E G "RXF8EN" 4 805 "256" `1153 
E G "RXF9EN" 4 805 "512" `1154 
E G "RXF10EN" 4 805 "1024" `1155 
E G "RXF11EN" 4 806 "2048" `1156 
E G "RXF12EN" 4 806 "4096" `1157 
E G "RXF13EN" 4 806 "8192" `1158 
E G "RXF14EN" 4 806 "16384" `1159 
E G "RXF15EN" 4 806 "32768" `1160 
V G "" 4 806 "" "receive filter control registers"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 2 "FUNCTION"
E G "F0BP" 4 816 "0" `1165 
E G "F1BP" 4 816 "1" `1166 
E G "F2BP" 4 816 "2" `1167 
E G "F3BP" 4 816 "3" `1168 
E G "F4BP" 4 817 "4" `1169 
E G "F5BP" 4 817 "5" `1170 
E G "F6BP" 4 817 "6" `1171 
E G "F7BP" 4 817 "7" `1172 
E G "F8BP" 4 817 "8" `1173 
E G "F9BP" 4 818 "9" `1174 
E G "F10BP" 4 818 "10" `1175 
E G "F11BP" 4 818 "11" `1176 
E G "F12BP" 4 818 "12" `1177 
E G "F13BP" 4 818 "13" `1178 
E G "F14BP" 4 819 "14" `1179 
E G "F15BP" 4 819 "15" `1180 
V G "" 4 819 ""
E G "ARXB0" 4 821 "0" `1182 
E G "ARXB1" 4 821 "1" `1183 
E G "AB0" 4 821 "2" `1184 
E G "AB1" 4 821 "3" `1185 
E G "AB2" 4 821 "4" `1186 
E G "AB3" 4 822 "5" `1187 
E G "AB4" 4 822 "6" `1188 
E G "AB5" 4 822 "7" `1189 
V G "" 4 822 "" "receive filter buffer control registers"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "TXRXBaSIDL" 4 853 "{int3 void012,int1 ext,int1 srr,int3 void567}" `1212 
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
V G "RXB0DLC" 4 864 "{int4 dlc,int1 rb0,int1 rb1,int1 rtr,int1 void7}" `1219 
V G "RXB1DLC" 4 865 "{int4 dlc,int1 rb0,int1 rb1,int1 rtr,int1 void7}" `1220 
V G "RXBaDLC" 4 866 "{int4 dlc,int1 rb0,int1 rb1,int1 rtr,int1 void7}" `1221 
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
D G "RXFILTER0" 4 951 "getenv("SFR:RXF0EIDL")" "0xF03"
D G "RXFILTER1" 4 952 "getenv("SFR:RXF1EIDL")" "0xF07"
D G "RXFILTER2" 4 953 "getenv("SFR:RXF2EIDL")" "0xF0B"
D G "RXFILTER3" 4 954 "getenv("SFR:RXF3EIDL")" "0xF0F"
D G "RXFILTER4" 4 955 "getenv("SFR:RXF4EIDL")" "0xF13"
D G "RXFILTER5" 4 956 "getenv("SFR:RXF5EIDL")" "0xF17"
D G "RXFILTER6" 4 957 "getenv("SFR:RXF6EIDL")" "0xD63"
D G "RXFILTER7" 4 958 "getenv("SFR:RXF7EIDL")" "0xD67"
D G "RXFILTER8" 4 959 "getenv("SFR:RXF8EIDL")" "0xD6B"
D G "RXFILTER9" 4 960 "getenv("SFR:RXF9EIDL")" "0xD73"
D G "RXFILTER10" 4 961 "getenv("SFR:RXF10EIDL")" "0xD77"
D G "RXFILTER11" 4 962 "getenv("SFR:RXF11EIDL")" "0xD7B"
D G "RXFILTER12" 4 963 "getenv("SFR:RXF12EIDL")" "0xD83"
D G "RXFILTER13" 4 964 "getenv("SFR:RXF13EIDL")" "0xD87"
D G "RXFILTER14" 4 965 "getenv("SFR:RXF14EIDL")" "0xD8B"
D G "RXFILTER15" 4 966 "getenv("SFR:RXF15EIDL")" "0xD93"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
D G "CAN_MASK_ACCEPT_ALL" 4 981 "0"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 2 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
C L "jump_to_isr" 4 2 1 "FUNCTION"
T G "rx_stat" 4 1002 "{int1 err_ovfl,int8 filthit,int8 buffer,int1 rtr,int1 ext,int1 inv}" `1314 
F N "can_init" 4 1004 ""
f G "can_init" 4 1004 "void()" `1315 
F N "can_set_baud" 4 1005 ""
f G "can_set_baud" 4 1005 "void()" `1316 
F N "can_set_mode" 4 1006 ""
V L "mode" 4 1006 "CAN_OP_MODE" `1318 
f G "can_set_mode" 4 1006 "void(CAN_OP_MODE mode)" `1317 
F N "can_set_functional_mode" 4 1007 ""
V L "mode" 4 1007 "CAN_FUN_OP_MODE" `1320 
f G "can_set_functional_mode" 4 1007 "void(CAN_FUN_OP_MODE mode)" `1319 
F N "can_set_id" 4 1008 ""
V L "addr" 4 1008 "*int8" `1322 
V L "id" 4 1008 "int32" `1323 
V L "ext" 4 1008 "int8" `1324 
f G "can_set_id" 4 1008 "void(*int8 addr,int32 id,int8 ext)" `1321 
F N "can_get_id" 4 1009 ""
V L "addr" 4 1009 "*int8" `1326 
V L "ext" 4 1009 "int8" `1327 
f G "can_get_id" 4 1009 "int32(*int8 addr,int8 ext)" `1325 
F N "can_putd" 4 1010 ""
V L "id" 4 1010 "int32" `1329 
V L "data" 4 1010 "*int8" `1330 
V L "len" 4 1010 "int8" `1331 
V L "priority" 4 1010 "int8" `1332 
V L "ext" 4 1010 "int8" `1333 
V L "rtr" 4 1010 "int8" `1334 
f G "can_putd" 4 1010 "int8(int32 id,*int8 data,int8 len,int8 priority,int8 ext,int8 rtr)" `1328 
F N "can_getd" 4 1011 ""
V L "id" 4 1011 "int32" `1336 
V L "data" 4 1011 "*int8" `1337 
V L "len" 4 1011 "int8" `1338 
V L "stat" 4 1011 "{int1 err_ovfl,int8 filthit,int8 buffer,int1 rtr,int1 ext,int1 inv}" `1339 
f G "can_getd" 4 1011 "int8(int32 id,*int8 data,int8 len,{int1 err_ovfl,int8 filthit,int8 buffer,int1 rtr,int1 ext,int1 inv} stat)" `1335 
F N "can_enable_rtr" 4 1012 ""
V L "b" 4 1012 "PROG_BUFFER" `1341 
f G "can_enable_rtr" 4 1012 "void(PROG_BUFFER b)" `1340 
F N "can_disable_rtr" 4 1013 ""
V L "b" 4 1013 "PROG_BUFFER" `1343 
f G "can_disable_rtr" 4 1013 "void(PROG_BUFFER b)" `1342 
F N "can_load_rtr" 4 1014 ""
V L "b" 4 1014 "PROG_BUFFER" `1345 
V L "data" 4 1014 "*int8" `1346 
V L "len" 4 1014 "int8" `1347 
f G "can_load_rtr" 4 1014 "void(PROG_BUFFER b,*int8 data,int8 len)" `1344 
F N "can_enable_filter" 4 1015 ""
V L "filter" 4 1015 "int16" `1349 
f G "can_enable_filter" 4 1015 "void(int16 filter)" `1348 
F N "can_disable_filter" 4 1016 ""
V L "filter" 4 1016 "int16" `1351 
f G "can_disable_filter" 4 1016 "void(int16 filter)" `1350 
F N "can_associate_filter_to_buffer" 4 1017 ""
V L "buffer" 4 1017 "CAN_FILTER_ASSOCIATION_BUFFERS" `1353 
V L "filter" 4 1017 "CAN_FILTER_ASSOCIATION" `1354 
f G "can_associate_filter_to_buffer" 4 1017 "void(CAN_FILTER_ASSOCIATION_BUFFERS buffer,CAN_FILTER_ASSOCIATION filter)" `1352 
F N "can_associate_filter_to_mask" 4 1018 ""
V L "mask" 4 1018 "CAN_MASK_FILTER_ASSOCIATE" `1356 
V L "filter" 4 1018 "CAN_FILTER_ASSOCIATION" `1357 
f G "can_associate_filter_to_mask" 4 1018 "void(CAN_MASK_FILTER_ASSOCIATE mask,CAN_FILTER_ASSOCIATION filter)" `1355 
F N "can_fifo_getd" 4 1019 ""
V L "id" 4 1019 "int32" `1359 
V L "data" 4 1019 "*int8" `1360 
V L "len" 4 1019 "int8" `1361 
V L "stat" 4 1019 "{int1 err_ovfl,int8 filthit,int8 buffer,int1 rtr,int1 ext,int1 inv}" `1362 
f G "can_fifo_getd" 4 1019 "int8(int32 id,*int8 data,int8 len,{int1 err_ovfl,int8 filthit,int8 buffer,int1 rtr,int1 ext,int1 inv} stat)" `1358 
D G "can_debug" 3 160 ""
D G "can_kbhit" 3 164 "() (RXB0CON.rxful || RXB1CON.rxful || (B0CONR.rxful && !BSEL0.b0txen) || (B1CONR.rxful && !BSEL0.b1txen) || (B2CONR.rxful && !BSEL0.b2txen) || (B3CONR.rxful && !BSEL0.b3txen) || (B4CONR.rxful && !BSEL0.b4txen) || (B5CONR.rxful && !BSEL0.b5txen))"
D G "can_tbe" 3 165 "() (!TXB0CON.txreq || !TXB1CON.txreq || !TXB2CON.txreq || (!B0CONT.txreq && BSEL0.b0txen) || (!B1CONT.txreq && BSEL0.b1txen) || (!B2CONT.txreq && BSEL0.b2txen) || (!B3CONT.txreq && BSEL0.b3txen) || (!B4CONT.txreq && BSEL0.b4txen) || (!B5CONT.txreq && BSEL0.b5txen))"
D G "can_tx_is_empty" 3 166 "() (!TXB0CON.txreq && !TXB1CON.txreq && !TXB2CON.txreq && (!B0CONT.txreq || !BSEL0.b0txen) && (!B1CONT.txreq || !BSEL0.b1txen) && (!B2CONT.txreq || !BSEL0.b2txen) && (!B3CONT.txreq || !BSEL0.b3txen) && (!B4CONT.txreq || !BSEL0.b4txen) && (!B5CONT.txreq || !BSEL0.b5txen))"
D G "can_abort" 3 167 "()                 (CANCON.abat=1)"
C L "can_fifo_getd" 3 163 2 "FUNCTION"
V G "curmode" 3 172 "int8" `1363 
V G "curfunmode" 3 176 "int8" `1364 
D G "CAN_USER_MASK_0" 3 180 "CAN_MASK_ACCEPT_ALL"
D G "CAN_USER_MASK_1" 3 183 "CAN_MASK_ACCEPT_ALL"
D G "CAN_USER_FILT_0" 3 187 "0"
D G "CAN_USER_FILT_1" 3 190 "0"
D G "CAN_USER_FILT_2" 3 193 "0"
D G "CAN_USER_FILT_3" 3 196 "0"
D G "CAN_USER_FILT_4" 3 199 "0"
D G "CAN_USER_FILT_5" 3 202 "0"
D G "CAN_USER_FILT_6" 3 205 "0"
D G "CAN_USER_FILT_7" 3 208 "0"
D G "CAN_USER_FILT_8" 3 211 "0"
D G "CAN_USER_FILT_9" 3 214 "0"
D G "CAN_USER_FILT_10" 3 217 "0"
D G "CAN_USER_FILT_11" 3 220 "0"
D G "CAN_USER_FILT_12" 3 223 "0"
D G "CAN_USER_FILT_13" 3 226 "0"
D G "CAN_USER_FILT_14" 3 229 "0"
D G "CAN_USER_FILT_15" 3 232 "0"
C L "can_fifo_getd" 3 163 11 "FUNCTION"
F N "can_init" 3 271 ""
F G "can_init" 3 271 "void()" `1315 
C L "can_init" 3 163 1 "FUNCTION"
C L "can_init" 3 163 6 "FUNCTION"
C L "can_init" 3 163 1 "FUNCTION"
C L "can_init" 3 163 1 "FUNCTION"
C L "can_init" 3 163 1 "FUNCTION"
C L "can_init" 3 163 1 "FUNCTION"
C L "can_init" 3 163 1 "FUNCTION"
C L "can_init" 3 163 1 "FUNCTION"
C L "can_init" 3 163 1 "FUNCTION"
C L "can_init" 3 163 1 "FUNCTION"
C L "can_init" 3 163 1 "FUNCTION"
C L "can_init" 3 163 2 "FUNCTION"
C L "can_set_baud" 3 163 54 "FUNCTION"
F N "can_set_baud" 3 424 ""
F G "can_set_baud" 3 424 "void()" `1316 
C L "can_set_mode" 3 163 28 "FUNCTION"
F N "can_set_mode" 3 478 ""
V L "mode" 3 478 "CAN_OP_MODE" `1406 
F G "can_set_mode" 3 478 "void(CAN_OP_MODE mode)" `1317 
F N "can_set_functional_mode" 3 540 ""
V L "mode" 3 540 "CAN_FUN_OP_MODE" `1406 
F G "can_set_functional_mode" 3 541 "void(CAN_FUN_OP_MODE mode)" `1319 
C L "can_set_functional_mode" 3 163 1 "FUNCTION"
C L "can_set_id" 3 163 8 "FUNCTION"
F N "can_set_id" 3 567 ""
V L "addr" 3 567 "*int8" `1322 
V L "id" 3 567 "int32" `1323 
V L "ext" 3 567 "int8" `1408 
F G "can_set_id" 3 567 "void(*int8 addr,int32 id,int8 ext)" `1321  "int *ptr;"
C L "can_set_id" 3 163 1 "FUNCTION"
C L "can_set_id" 3 163 2 "FUNCTION"
C L "can_set_id" 3 163 2 "FUNCTION"
C L "can_set_id" 3 163 2 "FUNCTION"
C L "can_set_id" 3 163 1 "FUNCTION"
C L "can_set_id" 3 163 1 "FUNCTION"
C L "can_set_id" 3 163 1 "FUNCTION"
C L "can_set_id" 3 163 1 "FUNCTION"
C L "can_set_id" 3 163 1 "FUNCTION"
C L "can_set_id" 3 163 2 "FUNCTION"
C L "can_set_id" 3 163 1 "FUNCTION"
C L "can_set_id" 3 163 1 "FUNCTION"
C L "can_set_id" 3 163 1 "FUNCTION"
C L "can_set_standard_id" 3 163 5 "FUNCTION"
F N "can_set_standard_id" 3 623 ""
V L "addr" 3 623 "*int8" `1406 
V L "id" 3 623 "int32" `1407 
F G "can_set_standard_id" 3 624 "void(*int8 addr,int32 id,int8 ext,*int8 addr,int32 id)" `1405  "eidl"
C L "can_set_standard_id" 3 163 1 "FUNCTION"
C L "can_set_standard_id" 3 163 1 "FUNCTION"
C L "can_set_standard_id" 3 163 1 "FUNCTION"
C L "can_set_extended_id" 3 163 5 "FUNCTION"
F N "can_set_extended_id" 3 654 ""
V L "addr" 3 654 "*int8" `1409 
V L "id" 3 654 "int32" `1410 
F G "can_set_extended_id" 3 655 "void(*int8 addr,int32 id)" `1408  "eidl"
C L "can_set_extended_id" 3 163 2 "FUNCTION"
C L "can_set_extended_id" 3 163 2 "FUNCTION"
C L "can_set_extended_id" 3 163 1 "FUNCTION"
C L "can_set_extended_id" 3 163 1 "FUNCTION"
C L "can_set_extended_id" 3 163 1 "FUNCTION"
C L "can_set_extended_id" 3 163 1 "FUNCTION"
C L "can_set_extended_id" 3 163 1 "FUNCTION"
C L "can_get_id" 3 163 9 "FUNCTION"
F N "can_get_id" 3 692 ""
V L "addr" 3 692 "*int8" `1326 
V L "ext" 3 692 "int8" `1413 
F G "can_get_id" 3 692 "int32(*int8 addr,int8 ext)" `1325 
V L "ret" 3 693 "int32" `1411 
V L "ptr" 3 694 "*int8" `1412 
C L "can_get_id" 3 163 1 "FUNCTION"
C L "can_get_id" 3 163 1 "FUNCTION"
C L "can_get_id" 3 163 1 "FUNCTION"
C L "can_get_id" 3 163 1 "FUNCTION"
C L "can_get_id" 3 163 1 "FUNCTION"
C L "can_get_id" 3 163 1 "FUNCTION"
C L "can_get_extended_id" 3 163 4 "FUNCTION"
F N "can_get_extended_id" 3 734 ""
V L "addr" 3 734 "*int8" `1414 
F G "can_get_extended_id" 3 735 "int32(*int8 addr)" `1413 
V L "ret" 3 736 "int32" `1415 
C L "can_get_extended_id" 3 163 1 "FUNCTION"
C L "can_get_extended_id" 3 163 1 "FUNCTION"
C L "can_get_extended_id" 3 163 1 "FUNCTION"
C L "can_get_extended_id" 3 163 1 "FUNCTION"
C L "can_get_standard_id" 3 163 4 "FUNCTION"
F N "can_get_standard_id" 3 763 ""
V L "addr" 3 763 "*int8" `1417 
F G "can_get_standard_id" 3 764 "int32(*int8 addr)" `1416 
V L "ret" 3 765 "int32" `1418 
C L "can_get_standard_id" 3 163 1 "FUNCTION"
C L "can_get_standard_id" 3 163 1 "FUNCTION"
C L "can_putd" 3 163 16 "FUNCTION"
F N "can_putd" 3 799 ""
V L "id" 3 799 "int32" `1329 
V L "data" 3 799 "*int8" `1330 
V L "len" 3 799 "int8" `1331 
V L "priority" 3 799 "int8" `1332 
V L "ext" 3 799 "int8" `1333 
V L "rtr" 3 799 "int8" `1425 
F G "can_putd" 3 799 "int8(int32 id,*int8 data,int8 len,int8 priority,int8 ext,int8 rtr)" `1328 
V L "i" 3 800 "int8" `1419 
V L "txd0" 3 801 "*int8" `1420 
V L "port" 3 802 "int8" `1421 
C L "can_putd" 3 163 2 "FUNCTION"
C L "can_putd" 3 163 1 "FUNCTION"
C L "can_putd" 3 163 1 "FUNCTION"
C L "can_putd" 3 163 1 "FUNCTION"
C L "can_putd" 3 163 1 "FUNCTION"
C L "can_getd" 3 163 11 "FUNCTION"
F N "can_getd" 3 950 ""
V L "id" 3 950 "int32" `1336 
V L "data" 3 950 "*int8" `1337 
V L "len" 3 950 "int8" `1338 
V L "stat" 3 950 "{int1 err_ovfl,int8 filthit,int8 buffer,int1 rtr,int1 ext,int1 inv}" `1426 
F G "can_getd" 3 951 "int8(int32 id,*int8 data,int8 len,{int1 err_ovfl,int8 filthit,int8 buffer,int1 rtr,int1 ext,int1 inv} stat)" `1335 
V L "i" 3 952 "int8" `1422 
V L "ptr" 3 953 "*int8" `1423 
C L "can_getd" 3 163 1 "FUNCTION"
C L "can_getd" 3 163 1 "FUNCTION"
C L "can_getd" 3 163 1 "FUNCTION"
C L "can_getd" 3 163 1 "FUNCTION"
C L "can_getd" 3 163 2 "FUNCTION"
C L "can_getd" 3 163 1 "FUNCTION"
C L "can_getd" 3 163 2 "FUNCTION"
C L "can_getd" 3 163 1 "FUNCTION"
C L "can_getd" 3 163 2 "FUNCTION"
C L "can_getd" 3 163 1 "FUNCTION"
C L "can_getd" 3 163 2 "FUNCTION"
C L "can_getd" 3 163 1 "FUNCTION"
C L "can_getd" 3 163 2 "FUNCTION"
C L "can_getd" 3 163 1 "FUNCTION"
C L "can_getd" 3 163 2 "FUNCTION"
C L "can_getd" 3 163 1 "FUNCTION"
C L "can_getd" 3 163 1 "FUNCTION"
C L "can_enable_b_transfer" 3 163 13 "FUNCTION"
F N "can_enable_b_transfer" 3 1241 ""
V L "b" 3 1241 "PROG_BUFFER" `1425 
F G "can_enable_b_transfer" 3 1242 "void(PROG_BUFFER b,{int1 err_ovfl,int8 filthit,int8 buffer,int1 rtr,int1 ext,int1 inv} stat)" `1424 
V L "temp" 3 1243 "int8" `1426 
C L "can_enable_b_receiver" 3 163 15 "FUNCTION"
F N "can_enable_b_receiver" 3 1276 ""
V L "b" 3 1276 "PROG_BUFFER" `1428 
F G "can_enable_b_receiver" 3 1277 "void(PROG_BUFFER b)" `1427 
V L "temp" 3 1278 "int8" `1429 
C L "can_enable_rtr" 3 163 18 "FUNCTION"
F N "can_enable_rtr" 3 1316 ""
V L "b" 3 1316 "PROG_BUFFER" `1431 
F G "can_enable_rtr" 3 1317 "void(PROG_BUFFER b)" `1340 
C L "can_disable_rtr" 3 163 18 "FUNCTION"
F N "can_disable_rtr" 3 1366 ""
V L "b" 3 1366 "PROG_BUFFER" `1431 
F G "can_disable_rtr" 3 1367 "void(PROG_BUFFER b)" `1342 
C L "can_load_rtr" 3 163 20 "FUNCTION"
F N "can_load_rtr" 3 1415 ""
V L "b" 3 1415 "PROG_BUFFER" `1345 
V L "data" 3 1415 "*int8" `1346 
V L "len" 3 1415 "int8" `1433 
F G "can_load_rtr" 3 1416 "void(PROG_BUFFER b,*int8 data,int8 len)" `1344 
V L "ptr" 3 1418 "*int8" `1430  "do no damage to the current mode;"
C L "can_enable_filter" 3 163 9 "FUNCTION"
F N "can_enable_filter" 3 1484 ""
V L "filter" 3 1484 "int16" `1432 
F G "can_enable_filter" 3 1485 "void(int16 filter)" `1348 
V L "ptr" 3 1486 "*int16" `1431 
C L "can_disable_filter" 3 163 9 "FUNCTION"
F N "can_disable_filter" 3 1516 ""
V L "filter" 3 1516 "int16" `1433 
F G "can_disable_filter" 3 1517 "void(int16 filter)" `1350 
V L "ptr" 3 1518 "*int16" `1432 
C L "can_associate_filter_to_buffer" 3 163 14 "FUNCTION"
F N "can_associate_filter_to_buffer" 3 1555 ""
V L "buffer" 3 1555 "CAN_FILTER_ASSOCIATION_BUFFERS" `1353 
V L "filter" 3 1555 "CAN_FILTER_ASSOCIATION" `1435 
F G "can_associate_filter_to_buffer" 3 1556 "void(CAN_FILTER_ASSOCIATION_BUFFERS buffer,CAN_FILTER_ASSOCIATION filter)" `1352 
V L "ptr" 3 1557 "*int8" `1433 
C L "can_associate_filter_to_mask" 3 163 16 "FUNCTION"
F N "can_associate_filter_to_mask" 3 1605 ""
V L "mask" 3 1605 "CAN_MASK_FILTER_ASSOCIATE" `1356 
V L "filter" 3 1605 "CAN_FILTER_ASSOCIATION" `1436 
F G "can_associate_filter_to_mask" 3 1606 "void(CAN_MASK_FILTER_ASSOCIATE mask,CAN_FILTER_ASSOCIATION filter)" `1355 
V L "ptr" 3 1607 "*int8" `1434 
C L "can_fifo_getd" 3 163 11 "FUNCTION"
F N "can_fifo_getd" 3 1658 ""
V L "id" 3 1658 "int32" `1359 
V L "data" 3 1658 "*int8" `1360 
V L "len" 3 1658 "int8" `1361 
V L "stat" 3 1658 "{int1 err_ovfl,int8 filthit,int8 buffer,int1 rtr,int1 ext,int1 inv}" `1439 
F G "can_fifo_getd" 3 1659 "int8(int32 id,*int8 data,int8 len,{int1 err_ovfl,int8 filthit,int8 buffer,int1 rtr,int1 ext,int1 inv} stat)" `1358 
V L "i" 3 1661 "int8" `1435 
V L "ptr" 3 1662 "*int8" `1436 
C L "can_fifo_getd" 3 163 1 "FUNCTION"
C L "can_fifo_getd" 3 163 1 "FUNCTION"
C L "can_fifo_getd" 3 163 1 "FUNCTION"
C L "can_fifo_getd" 3 163 1 "FUNCTION"
C L "can_t0_putd" 3 163 19 "FUNCTION"
F N "can_t0_putd" 3 1731 ""
V L "id" 3 1731 "int32" `1438 
V L "data" 3 1731 "*int8" `1439 
V L "len" 3 1731 "int8" `1440 
V L "pri" 3 1731 "int8" `1441 
V L "ext" 3 1731 "int8" `1442 
V L "rtr" 3 1731 "int8" `1443 
F G "can_t0_putd" 3 1732 "int8(int32 id,*int8 data,int8 len,int8 pri,int8 ext,int8 rtr)" `1437 
V L "ptr" 3 1733 "*int8" `1444 
C L "can_t1_putd" 3 163 1 "FUNCTION"
F N "can_t1_putd" 3 1761 ""
V L "id" 3 1761 "int32" `1446 
V L "data" 3 1761 "*int8" `1447 
V L "len" 3 1761 "int8" `1448 
V L "pri" 3 1761 "int8" `1449 
V L "ext" 3 1761 "int8" `1450 
V L "rtr" 3 1761 "int8" `1451 
F G "can_t1_putd" 3 1762 "int8(int32 id,*int8 data,int8 len,int8 pri,int8 ext,int8 rtr)" `1445 
V L "ptr" 3 1763 "*int8" `1452 
C L "can_t2_putd" 3 163 1 "FUNCTION"
F N "can_t2_putd" 3 1791 ""
V L "id" 3 1791 "int32" `1454 
V L "data" 3 1791 "*int8" `1455 
V L "len" 3 1791 "int8" `1456 
V L "pri" 3 1791 "int8" `1457 
V L "ext" 3 1791 "int8" `1458 
V L "rtr" 3 1791 "int8" `1459 
F G "can_t2_putd" 3 1792 "int8(int32 id,*int8 data,int8 len,int8 pri,int8 ext,int8 rtr)" `1453 
V L "ptr" 3 1793 "*int8" `1460 
C L "can_b0_putd" 3 163 1 "FUNCTION"
F N "can_b0_putd" 3 1821 ""
V L "id" 3 1821 "int32" `1462 
V L "data" 3 1821 "*int8" `1463 
V L "len" 3 1821 "int8" `1464 
V L "pri" 3 1821 "int8" `1465 
V L "ext" 3 1821 "int8" `1466 
V L "rtr" 3 1821 "int8" `1467 
F G "can_b0_putd" 3 1822 "int8(int32 id,*int8 data,int8 len,int8 pri,int8 ext,int8 rtr)" `1461 
V L "txd0" 3 1823 "*int8" `1468 
C L "can_b0_putd" 3 163 1 "FUNCTION"
C L "can_b0_putd" 3 163 1 "FUNCTION"
C L "can_b0_putd" 3 163 1 "FUNCTION"
C L "can_b0_putd" 3 163 1 "FUNCTION"
C L "can_b0_putd" 3 163 1 "FUNCTION"
C L "can_b1_putd" 3 163 1 "FUNCTION"
F N "can_b1_putd" 3 1860 ""
V L "id" 3 1860 "int32" `1470 
V L "data" 3 1860 "*int8" `1471 
V L "len" 3 1860 "int8" `1472 
V L "pri" 3 1860 "int8" `1473 
V L "ext" 3 1860 "int8" `1474 
V L "rtr" 3 1860 "int8" `1475 
F G "can_b1_putd" 3 1861 "int8(int32 id,*int8 data,int8 len,int8 pri,int8 ext,int8 rtr)" `1469 
V L "txd0" 3 1862 "*int8" `1476 
C L "can_b1_putd" 3 163 1 "FUNCTION"
C L "can_b1_putd" 3 163 1 "FUNCTION"
C L "can_b1_putd" 3 163 1 "FUNCTION"
C L "can_b1_putd" 3 163 1 "FUNCTION"
C L "can_b1_putd" 3 163 1 "FUNCTION"
C L "can_b2_putd" 3 163 1 "FUNCTION"
F N "can_b2_putd" 3 1898 ""
V L "id" 3 1898 "int32" `1478 
V L "data" 3 1898 "*int8" `1479 
V L "len" 3 1898 "int8" `1480 
V L "pri" 3 1898 "int8" `1481 
V L "ext" 3 1898 "int8" `1482 
V L "rtr" 3 1898 "int8" `1483 
F G "can_b2_putd" 3 1899 "int8(int32 id,*int8 data,int8 len,int8 pri,int8 ext,int8 rtr)" `1477 
V L "txd0" 3 1900 "*int8" `1484 
C L "can_b2_putd" 3 163 1 "FUNCTION"
C L "can_b2_putd" 3 163 1 "FUNCTION"
C L "can_b2_putd" 3 163 1 "FUNCTION"
C L "can_b2_putd" 3 163 1 "FUNCTION"
C L "can_b2_putd" 3 163 1 "FUNCTION"
C L "can_b3_putd" 3 163 1 "FUNCTION"
F N "can_b3_putd" 3 1936 ""
V L "id" 3 1936 "int32" `1486 
V L "data" 3 1936 "*int8" `1487 
V L "len" 3 1936 "int8" `1488 
V L "pri" 3 1936 "int8" `1489 
V L "ext" 3 1936 "int8" `1490 
V L "rtr" 3 1936 "int8" `1491 
F G "can_b3_putd" 3 1937 "int8(int32 id,*int8 data,int8 len,int8 pri,int8 ext,int8 rtr)" `1485 
V L "txd0" 3 1938 "*int8" `1492 
C L "can_b3_putd" 3 163 1 "FUNCTION"
C L "can_b3_putd" 3 163 1 "FUNCTION"
C L "can_b3_putd" 3 163 1 "FUNCTION"
C L "can_b3_putd" 3 163 1 "FUNCTION"
C L "can_b3_putd" 3 163 1 "FUNCTION"
C L "can_b4_putd" 3 163 1 "FUNCTION"
F N "can_b4_putd" 3 1975 ""
V L "id" 3 1975 "int32" `1494 
V L "data" 3 1975 "*int8" `1495 
V L "len" 3 1975 "int8" `1496 
V L "pri" 3 1975 "int8" `1497 
V L "ext" 3 1975 "int8" `1498 
V L "rtr" 3 1975 "int8" `1499 
F G "can_b4_putd" 3 1976 "int8(int32 id,*int8 data,int8 len,int8 pri,int8 ext,int8 rtr)" `1493 
V L "txd0" 3 1977 "*int8" `1500 
C L "can_b4_putd" 3 163 1 "FUNCTION"
C L "can_b4_putd" 3 163 1 "FUNCTION"
C L "can_b4_putd" 3 163 1 "FUNCTION"
C L "can_b4_putd" 3 163 1 "FUNCTION"
C L "can_b4_putd" 3 163 1 "FUNCTION"
C L "can_b5_putd" 3 163 1 "FUNCTION"
F N "can_b5_putd" 3 2013 ""
V L "id" 3 2013 "int32" `1502 
V L "data" 3 2013 "*int8" `1503 
V L "len" 3 2013 "int8" `1504 
V L "pri" 3 2013 "int8" `1505 
V L "ext" 3 2013 "int8" `1506 
V L "rtr" 3 2013 "int8" `1507 
F G "can_b5_putd" 3 2014 "int8(int32 id,*int8 data,int8 len,int8 pri,int8 ext,int8 rtr)" `1501 
V L "txd0" 3 2015 "*int8" `1508 
C L "can_b5_putd" 3 163 1 "FUNCTION"
C L "can_b5_putd" 3 163 1 "FUNCTION"
C L "can_b5_putd" 3 163 1 "FUNCTION"
C L "can_b5_putd" 3 163 1 "FUNCTION"
C L "can_b5_putd" 3 163 1 "FUNCTION"
D G "CAN_ID_PEDAL_BOARD" 0 41 "0x01" "board CAN ID"
D G "CAN_ID_PEDAL_CALIB" 0 42 "0x02" "board CAN ID"
D G "CAN_ID_CONDICION" 0 43 "0x03" "ID que debe recibirse antes de enviar por can la ID 2"
D G "CAN_PRIORITY" 0 44 "0x11" "max priority"
D G "CAN_BUFFER_LENGTH" 0 45 "8" "set buffer to be sent by CAN"
D G "VENTANA" 0 47 "5" "Tamaño de la ventana de la media movil"
D G "MAX_IGNORE_VALUE" 0 48 "250"
V G "TIME_INTERVAL_1MS" 0 50 "int16" `1509 
V G "avgA1" 0 51 "int8" `1511 
V G "avgA2" 0 52 "int8" `1512 
V G "avgA3" 0 53 "int8" `1513 
V G "avgBrk" 0 54 "int8" `1514 
V G "avgSens" 0 55 "int8" `1515 
V G "received_id3" 0 56 "int1" `1516 
C L "readChanel" 0 56 10 "FUNCTION"
F N "readChanel" 0 70 ""
V L "ch" 0 70 "int8" `1518 
F G "readChanel" 0 70 "int8(int8 ch)" `1517 
C L "readChanel" 0 56 1 "FUNCTION"
C L "readChanel" 0 56 1 "FUNCTION"
C L "readChanel" 0 56 1 "FUNCTION"
F N "factorConversion" 0 76 ""
V L "MAX" 0 76 "int16" `1520 
V L "min" 0 76 "int16" `1521 
V L "data" 0 76 "int16" `1522 
F G "factorConversion" 0 76 "int8(int16 MAX,int16 min,int16 data)" `1519 
F N "media_movil" 0 82 ""
V L "data" 0 82 "int16" `1530 
F G "media_movil" 0 82 "int8(int16 data)" `1529 
V L "filtered_data" 0 84 "int8" `1531 
V L "i" 0 84 "int8" `1532 
V L "BRK_valores" 0 85 "int16[5]" `1533 
C L "media_movil" 0 56 1 "FUNCTION"
C L "media_movil" 0 56 1 "FUNCTION"
C L "media_movil" 0 56 1 "FUNCTION"
C L "media_movil" 0 56 1 "FUNCTION"
C L "canrx0_int" 0 56 1 "FUNCTION"
F N "canrx0_int" 0 99 ""
F G "canrx0_int" 0 99 "void()" `1537 
V L "id" 0 103 "int32" `1538 
V L "buffer" 0 104 "int8[8]" `1539 
V L "len" 0 105 "int8" `1540 
V L "rxstat" 0 106 "{int1 err_ovfl,int8 filthit,int8 buffer,int1 rtr,int1 ext,int1 inv}" `1541 
C L "canrx0_int" 0 56 1 "FUNCTION"
V L "bufferCalib" 0 115 "int8[8]" `1542 
C L "canrx0_int" 0 56 1 "FUNCTION"
F N "MAIN" 0 134 ""
F G "MAIN" 0 135 "void()" `1543 
V L "buffer" 0 136 "int8[8]" `1544 
V L "prevA1" 0 137 "int16" `1545 
V L "prevA2" 0 137 "int16" `1546 
V L "prevA3" 0 137 "int16" `1547 
V L "prevBrk" 0 137 "int16" `1548 
V L "prevSens" 0 137 "int16" `1549 
V L "A1" 0 138 "int16" `1550 
V L "A2" 0 138 "int16" `1551 
V L "A3" 0 138 "int16" `1552 
V L "Brk" 0 138 "int16" `1553 
V L "Sens" 0 138 "int16" `1554 
V L "avgA1Calib" 0 139 "int8" `1555 
V L "avgA2Calib" 0 139 "int8" `1556 
V L "avgA3Calib" 0 139 "int8" `1557 
V L "avgBrkCalib" 0 139 "int8" `1558 
V L "avgSensCalib" 0 139 "int8" `1559 
V L "BRK_filtered" 0 139 "int8" `1560 
C L "MAIN" 0 56 1 "FUNCTION"
C L "MAIN" 0 56 1 "FUNCTION"
C L "MAIN" 0 56 1 "FUNCTION"
C L "MAIN" 0 56 1 "FUNCTION"
C L "MAIN" 0 56 1 "FUNCTION"
C L "MAIN" 0 56 2 "FUNCTION"
C L "MAIN" 0 56 2 "FUNCTION"
C L "MAIN" 0 56 1 "FUNCTION"
C L "MAIN" 0 56 1 "FUNCTION"
V L "id" 0 174 "int32" `1563 
V L "buffer" 0 175 "int8[8]" `1564 
V L "len" 0 176 "int8" `1565 
V L "rxstat" 0 177 "{int1 err_ovfl,int8 filthit,int8 buffer,int1 rtr,int1 ext,int1 inv}" `1566 
C L "MAIN" 0 56 7 "FUNCTION"
C L "MAIN" 0 56 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 1
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "scanf" 1 255
F B "fscanf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "_iosctrl" 1 2
F B "profileout" 1 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "interrupt_enabled" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "read_rom_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_e" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "input_change_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_port_a" 1 2
F B "setup_adc_ports" 1 2
F B "get_adc_ports" 0 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "set_analog_pins" 1 2
F B "get_capture" 0 1
F B "set_compare_time" 1 2
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 0 2
F B "pll_locked" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 2
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 2
F B "spi_data_is_in2" 0 0
F B "brownout_enable" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
